
#module _sync_

	//セーブデータの既定値を設定
	#deffunc SetDefaultSaveData
		sdim AccessID@portalsync		//アクセスID
		sdim RegName@portalsync		//名前
		dim RegLev@portalsync		//レベル
		dim RegEXP@portalsync		//経験値
		sdim RegAuth@portalsync		//認証キー
		sdim RegBadge@portalsync		//称号
		dim RegCharID@portalsync		//パートナーのID
		ddim RegPfPoint@portalsync,1	//総合能力値
		dim NumFragments@portalsync	//音色のかけらの所持数
		dim NumTickets@portalsync	//チャレンジチケットの所持数
		dim NumLilly@portalsync		//Lilly(通貨単位)
		dim PartnerCharID@portalsync	//パートナー
		dim ChapterMapID@portalsync	//チャプターマップID
		dim ChapterStepID@portalsync	//チャプターステップID

		ddim AddSpeed@,1			//流れてくる音符の速さ
		dim GaugeType@				//ゲージの種類
		dim ObjPlacement@			//オブジェクトの配置
		dim TargetScoreRank@		//目標スコアランク
		dim JudgeOffset@			//判定オフセット
		dim DispOffset@			//描画オフセット
		dim AutoPlayFlag@			//オートプレイフラグ
		dim drawbonusFlag@			//ボーナス表示フラグ
		dim confKeyCode@,14			//キーコンフィグ
		dim confDefKeyCode@,14		//キーコンフィグ（既定）
		dim musicselect_ItemID@		//曲選択画面の項目ID
		dim musicselect_LevelID@		//曲選択画面のレベル

		//チュートリアル閲覧フラグ
		dim WatchTutorial_MusicSelect_0@
		dim WatchTutorial_MusicSelect_1@
		dim WatchTutorial_Option@

		//LIBRARYモードの記録
		dim librec_PlayCount@		//今までプレイした楽曲数
		dim librec_numallex@		//ALL EXCELLENTを達成した回数
		dim librec_numfullcombo@		//FULL COMBOを達成した回数
		dim librec_nummadness@		//MADNESSオプションでクリアした回数
		dim librec_numexpert@		//EXPERTオプションでクリアした回数
		dim librec_numclear@		//通常のゲージでクリアした回数
		dim librec_numassist@		//ASSISTオプションでクリアした回数
		dim librec_numfailed@		//クリアに失敗した回数
		dim librec_numretire@		//途中でプレイを諦めた回数
		dim librec_numjexcellent@	//EXCELLENT判定を出した回数
		dim librec_numjgreat@		//GREAT判定を出した回数
		dim librec_numjgood@		//GOOD判定を出した回数
		dim librec_numjbad@			//BAD判定を出した回数
		dim librec_numjmiss@		//MISS判定を出した回数
		dim librec_numkeypush@		//今までキーを押した回数
		dim64 librec_totalscore@		//今まで獲得したスコア
		dim librec_conslilly@		//今まで消費したlilly
		dim librec_consticket@		//今まで消費したチケット数
		dim librec_consfragment@		//今まで消費した音色のかけら
		dim librec_logincount@		//ゲームにログインした回数

		AccessID@portalsync="*"
		RegName@portalsync="******"
		RegLev@portalsync=1
		RegAuth@portalsync=""
		RegBadge@portalsync="******"
		RegCharID@portalsync=0
		RegPfPoint@portalsync=0.0
		musicselect_ItemID@=0
		musicselect_LevelID@=0
		NumFragments@portalsync=0
		NumTickets@portalsync=0
		ChapterMapID@portalsync=0
		ChapterStepID@portalsync=0

		AddSpeed@=1.0
		GaugeType@=GAUGE_NORMAL
		ObjPlacement@=OBJP_NORMAL
		TargetScoreRank@=TARGET_SCORE_MAX
		JudgeOffset@=0
		DispOffset@=0
		AutoPlayFlag@=FALSE
		drawbonusFlag@=TRUE
		confDefKeyCode@(0)=KEY_INPUT_D
		confDefKeyCode@(1)=KEY_INPUT_F
		confDefKeyCode@(2)=KEY_INPUT_J
		confDefKeyCode@(3)=KEY_INPUT_K
		confDefKeyCode@(4)=KEY_INPUT_S
		confDefKeyCode@(5)=KEY_INPUT_L
		confDefKeyCode@(6)=KEY_INPUT_LEFT
		confDefKeyCode@(7)=KEY_INPUT_RIGHT
		confDefKeyCode@(8)=KEY_INPUT_UP
		confDefKeyCode@(9)=KEY_INPUT_DOWN
		confDefKeyCode@(10)=KEY_INPUT_BACK
		confDefKeyCode@(11)=KEY_INPUT_RETURN
		confDefKeyCode@(12)=KEY_INPUT_ESCAPE
		confDefKeyCode@(13)=KEY_INPUT_SPACE
		repeat 14
			confKeyCode@(cnt)=confDefKeyCode@(cnt)
		loop

		//セーブデータを読み込み
		repeat CharMax@charicon
			CharLev@charicon(cnt)=1
		loop

		//経験値テーブルを読み込み
		exist"Data/table_level.bin"
		sdim expTablebuf@,strsize
		bload"Data/table_level.bin",expTablebuf@

	return

	//WebAPIを初期化
	/*#deffunc WebAPI_Init
		if OfflineMode :return
		newcom objVBsc,"ScriptControl"
		objVBsc("Language")="VBScript"
		sdim VBscript_body:sdim VBscript_res
		VBscript_body={"
			Function httpget(s):Dim whr:Set whr=CreateObject("WinHttp.WinHttpRequest.5.1"):whr.Open "GET",s,false:whr.Send:httpget=whr.ResponseText:End Function
			Function httppost(s,p):Dim whr:Set whr=CreateObject("WinHttp.WinHttpRequest.5.1"):whr.Open "POST",s,false:whr.setRequestHeader "Content-Type","application/x-www-form-urlencoded":whr.Send(p):httppost=whr.responseText:End Function
		"}
		objVBsc->"AddCode" VBscript_body
		comres VBscript_res
	return

	//HTTPリクエストを発行し、結果を取得(get)
	#defcfunc WebAPI_Get str _url
		if OfflineMode :return""
		objVBsc->"Run" "httpget",_url
		sdim AsciiCode_LF:poke AsciiCode_LF,0,10
		sdim AsciiCode_CR:poke AsciiCode_CR,0,13
		strrep VBscript_res,AsciiCode_LF,""
		strrep VBscript_res,AsciiCode_CR,""
		strrep VBscript_res,"</br>","\n"
	return VBscript_res

	//HTTPリクエストを発行し、結果を取得(post)
	#defcfunc WebAPI_Post str _url,str _prm
		if OfflineMode :return""
		objVBsc->"Run" "httppost",_url,_prm
		sdim AsciiCode_LF:poke AsciiCode_LF,0,10
		sdim AsciiCode_CR:poke AsciiCode_CR,0,13
		strrep VBscript_res,AsciiCode_LF,""
		strrep VBscript_res,AsciiCode_CR,""
		strrep VBscript_res,"</br>","\n"
	return VBscript_res
	*/

	//ユーザー情報を登録
	#const global ID_HOST	0
	#const global ID_NAME	1
	#const global ID_KEY	2
	#const global ID_DECODE	3
	#deffunc RegLoginInfo array _struct
		sdim WebAPI_HostAddress
		sdim WebAPI_DecodeKey
		WebAPI_HostAddress=_struct(ID_HOST)
		RegName@portalsync=_struct(ID_NAME)
		RegAuth@portalsync=_struct(ID_KEY)
		WebAPI_DecodeKey=_struct(ID_DECODE)
	return

	//ユーザープロファイルを取得
	#defcfunc WebAPI_GetProfile
		sdim WebAPI_resraw
		WebAPI_resraw=WebAPI_Get("http://"+WebAPI_HostAddress+"/API-GetProfile.php?key="+GetINIvalue(coreBuf@_load_,"PortalSvc","APIkey_GetProfile")+"&decode="+WebAPI_DecodeKey+"&id="+RegName@portalsync+"&password="+RegAuth@portalsync)
		switch WebAPI_resraw
			case"ERROR_AUTH_APIKEY"
			ShowErrorMsg"ERROR_AUTH_APIKEY"
			swbreak
			case"ERROR_AUTH_PASSWORD"
			ShowErrorMsg"ERROR_AUTH_PASSWORD"
			swbreak
			case"ERROR_UNKNOWN_ID"
			ShowErrorMsg"ERROR_UNKNOWN_ID"
			swbreak
			case"ERROR_UNKNOWN_PRM"
			ShowErrorMsg"ERROR_UNKNOWN_PRM"
			swbreak
		swend
	return WebAPI_resraw

	//プロファイルを同期
	#deffunc WebAPI_SyncProfile
		sdim syncINIdata
		syncINIdata=WebAPI_GetProfile()
		if syncINIdata==""&OfflinePass@==FALSE {
			ShowErrorMsg"ERROR_SVC_CONNECTION"
		}

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.LEVEL")=="" :syncINIdata+"XODA.LEVEL=1\n"
		RegLev@portalsync=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.LEVEL"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.EXP")=="" :syncINIdata+"XODA.EXP=0\n"
		RegEXP@portalsync=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.EXP"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.RATE")=="" :syncINIdata+"XODA.RATE=0.0\n"
		RegPfPoint@portalsync=double(GetINIvalue(syncINIdata,"SAVEDATA","XODA.RATE"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.BADGE")=="" :syncINIdata+"XODA.BADGE=\n"
		RegBadge@portalsync=GetINIvalue(syncINIdata,"SAVEDATA","XODA.BADGE")

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.PARTNER")=="" :syncINIdata+"XODA.PARTNER=\n"
		RegCharID@portalsync=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.PARTNER"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.OPTION.ADDSPEED")=="" :syncINIdata+"XODA.OPTION.ADDSPEED=1.0\n"
		AddSpeed@=double(GetINIvalue(syncINIdata,"SAVEDATA","XODA.OPTION.ADDSPEED"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.OPTION.GAUGE")=="" :syncINIdata+"XODA.OPTION.GAUGE="+str(GAUGE_NORMAL)+"\n"
		GaugeType@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.OPTION.GAUGE"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.OPTION.PLACEMENT")=="" :syncINIdata+"XODA.OPTION.PLACEMENT="+str(OBJP_NORMAL)+"\n"
		ObjPlacement@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.OPTION.PLACEMENT"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.OPTION.TARGET")=="" :syncINIdata+"XODA.OPTION.TARGET="+str(TARGET_SCORE_MAX)+"\n"
		TargetScoreRank@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.OPTION.TARGET"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.OPTION.JUDGEOFFSET")=="" :syncINIdata+"XODA.OPTION.JUDGEOFFSET=0\n"
		JudgeOffset@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.OPTION.JUDGEOFFSET"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.OPTION.DISPOFFSET")=="" :syncINIdata+"XODA.OPTION.DISPOFFSET=0\n"
		DispOffset@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.OPTION.DISPOFFSET"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.OPTION.AUTOPLAY")=="" :syncINIdata+"XODA.OPTION.AUTOPLAY=0\n"
		AutoPlayFlag@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.OPTION.AUTOPLAY"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.OPTION.BONUSFLAG")=="" :syncINIdata+"XODA.OPTION.BONUSFLAG=1\n"
		drawbonusFlag@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.OPTION.BONUSFLAG"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.MUSICSELECT.CURSORID")=="" :syncINIdata+"XODA.MUSICSELECT.CURSORID=0\n"
		musicselect_ItemID@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.MUSICSELECT.CURSORID"))
		
		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.MUSICSELECT.LEVELID")=="" :syncINIdata+"XODA.MUSICSELECT.LEVELID=0\n"
		musicselect_LevelID@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.MUSICSELECT.LEVELID"))

		repeat 14
			if GetINIvalue(syncINIdata,"SAVEDATA","XODA.KEYCONFIG."+cnt)=="" :syncINIdata+"XODA.KEYCONFIG."+cnt+"="+confDefKeyCode@(cnt)+"\n"
			confKeyCode@(cnt)=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.KEYCONFIG."+cnt))
		loop

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.NUMFRAGMENTS")=="" :syncINIdata+"XODA.NUMFRAGMENTS=0\n"
		NumFragments@portalsync=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.NUMFRAGMENTS"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.NUMTICKETS")=="" :syncINIdata+"XODA.NUMTICKETS=0\n"
		NumTickets@portalsync=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.NUMTICKETS"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.NUMLILLY")=="" :syncINIdata+"XODA.NUMLILLY=0\n"
		NumLilly@portalsync=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.NUMLILLY"))+ExtraLilly

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.CHAPTERMAPID")=="" :syncINIdata+"XODA.CHAPTERMAPID=0\n"
		ChapterMapID@portalsync=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.CHAPTERMAPID"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.CHAPTERSTEPID")=="" :syncINIdata+"XODA.CHAPTERSTEPID=0\n"
		ChapterStepID@portalsync=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.CHAPTERSTEPID"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.WATCHTUTORIAL.MUSICSELECT.0")=="" :syncINIdata+"XODA.WATCHTUTORIAL.MUSICSELECT.0=0\n"
		WatchTutorial_MusicSelect_0@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.WATCHTUTORIAL.MUSICSELECT.0"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.WATCHTUTORIAL.MUSICSELECT.1")=="" :syncINIdata+"XODA.WATCHTUTORIAL.MUSICSELECT.1=0\n"
		WatchTutorial_MusicSelect_1@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.WATCHTUTORIAL.MUSICSELECT.1"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.WATCHTUTORIAL.PLAYOPTION")=="" :syncINIdata+"XODA.WATCHTUTORIAL.PLAYOPTION=0\n"
		WatchTutorial_Option@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.WATCHTUTORIAL.PLAYOPTION"))


		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.PLAYCOUNT")=="" :syncINIdata+"XODA.LIBREC.PLAYCOUNT=0\n"
		librec_PlayCount@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.PLAYCOUNT"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMALLEX")=="" :syncINIdata+"XODA.LIBREC.NUMALLEX=0\n"
		librec_numallex@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMALLEX"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMFULLCOMBO")=="" :syncINIdata+"XODA.LIBREC.NUMFULLCOMBO=0\n"
		librec_numfullcombo@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMFULLCOMBO"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMMADNESS")=="" :syncINIdata+"XODA.LIBREC.NUMMADNESS=0\n"
		librec_nummadness@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMMADNESS"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMEXPERT")=="" :syncINIdata+"XODA.LIBREC.NUMEXPERT=0\n"
		librec_numexpert@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMEXPERT"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMCLEAR")=="" :syncINIdata+"XODA.LIBREC.NUMCLEAR=0\n"
		librec_numclear@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMCLEAR"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMASSIST")=="" :syncINIdata+"XODA.LIBREC.NUMASSIST=0\n"
		librec_numassist@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMASSIST"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMFAILED")=="" :syncINIdata+"XODA.LIBREC.NUMFAILED=0\n"
		librec_numfailed@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMFAILED"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMRETIRE")=="" :syncINIdata+"XODA.LIBREC.NUMRETIRE=0\n"
		librec_numretire@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMRETIRE"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMJEXCELLENT")=="" :syncINIdata+"XODA.LIBREC.NUMJEXCELLENT=0\n"
		librec_numjexcellent@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMJEXCELLENT"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMJGREAT")=="" :syncINIdata+"XODA.LIBREC.NUMJGREAT=0\n"
		librec_numjgreat@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMJGREAT"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMJGOOD")=="" :syncINIdata+"XODA.LIBREC.NUMJGOOD=0\n"
		librec_numjgood@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMJGOOD"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMJBAD")=="" :syncINIdata+"XODA.LIBREC.NUMJBAD=0\n"
		librec_numjbad@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMJBAD"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMJMISS")=="" :syncINIdata+"XODA.LIBREC.NUMJMISS=0\n"
		librec_numjmiss@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMJMISS"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMKEYPUSH")=="" :syncINIdata+"XODA.LIBREC.NUMKEYPUSH=0\n"
		librec_numkeypush@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.NUMKEYPUSH"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.TOTALSCORE")=="" :syncINIdata+"XODA.LIBREC.TOTALSCORE=0\n"
		librec_totalscore@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.TOTALSCORE"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.CONSLILLY")=="" :syncINIdata+"XODA.LIBREC.CONSLILLY=0\n"
		librec_conslilly@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.CONSLILLY"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.CONSTICKET")=="" :syncINIdata+"XODA.LIBREC.CONSTICKET=0\n"
		librec_consticket@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.CONSTICKET"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.CONSFRAGMENT")=="" :syncINIdata+"XODA.LIBREC.CONSFRAGMENT=0\n"
		librec_consfragment@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.CONSFRAGMENT"))

		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.LOGINCOUNT")=="" :syncINIdata+"XODA.LIBREC.LOGINCOUNT=0\n"
		librec_logincount@=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.LIBREC.LOGINCOUNT"))
	
	return

	#deffunc GetPartnerCharUnlockData
		dim CharUnlockFlag@charicon,CharMax@charicon
		repeat CharMax@charicon
			if CharPrice@charicon(cnt)==0 :CharUnlockFlag@charicon(cnt)=TRUE:continue
			CharUnlockFlag@charicon(cnt)=int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.PARTNER.UNLOCK."+cnt))
		loop
	return

	#defcfunc GetChartUnlockFlag str _uuid
		if UnlockAllCharts==TRUE :return 1
		return int(GetINIvalue(syncINIdata,"SAVEDATA","XODA.MAP.UNLOCK."+_uuid))
	#deffunc RegChartUnlockFlag str _uuid,int _flag
		if GetINIvalue(syncINIdata,"SAVEDATA","XODA.MAP.UNLOCK."+_uuid)=="" :syncINIdata+"XODA.MAP.UNLOCK."+_uuid+"="+_flag+"\n"
		if _flag==0 :strrep syncINIdata,"XODA.MAP.UNLOCK."+_uuid+"=1","XODA.MAP.UNLOCK."+_uuid+"=0"
		if _flag==1 :strrep syncINIdata,"XODA.MAP.UNLOCK."+_uuid+"=0","XODA.MAP.UNLOCK."+_uuid+"=1"
		WebAPI_SendProfile"XODA.MAP.UNLOCK."+_uuid,str(_flag)
		return

	//スコアデータを取得
	#enum global ID_REC_UUID		=	0
	#enum global ID_REC_PLAYER
	#enum global ID_REC_SCORE
	#enum global ID_REC_EXCELLENT
	#enum global ID_REC_GREAT
	#enum global ID_REC_GOOD
	#enum global ID_REC_BAD
	#enum global ID_REC_MISS
	#enum global ID_REC_EARLY
	#enum global ID_REC_LATE
	#enum global ID_REC_MAXCOMBO
	#enum global ID_REC_PACE_4BINHEX
	#enum global ID_REC_SCORE_4BINHEX
	#enum global ID_REC_CLEARTYPE
	#enum global ID_REC_DATE
	#enum global ID_REC_AP
	#defcfunc WebAPI_GetRecord
		if OfflinePass@ :return""
		CheckNetworkConnection
	return WebAPI_Get("http://"+WebAPI_HostAddress+"/API-GetRecord.php?key="+GetINIvalue(coreBuf@_load_,"PortalSvc","APIkey_GetRecord")+"&name="+RegName@portalsync)
	#deffunc WebAPI_SyncRecord str _raw,str _uuid,array _struct
		//重いわよここ
		sdim WebAPI_resraw
		WebAPI_resraw=_raw
		_struct(ID_REC_UUID)=GetINIvalue(WebAPI_resraw,_uuid,"ID")				//識別子
		_struct(ID_REC_PLAYER)=GetINIvalue(WebAPI_resraw,_uuid,"Name")			//プレイヤー名
		_struct(ID_REC_SCORE)=GetINIvalue(WebAPI_resraw,_uuid,"Score")			//スコア(10000000点満点)
		_struct(ID_REC_EXCELLENT)=GetINIvalue(WebAPI_resraw,_uuid,"NumExcellent")	//EXCELLENT数
		_struct(ID_REC_GREAT)=GetINIvalue(WebAPI_resraw,_uuid,"NumGreat")		//GREAT数
		_struct(ID_REC_GOOD)=GetINIvalue(WebAPI_resraw,_uuid,"NumGood")			//GOOD数
		_struct(ID_REC_BAD)=GetINIvalue(WebAPI_resraw,_uuid,"NumBad")			//BAD数
		_struct(ID_REC_MISS)=GetINIvalue(WebAPI_resraw,_uuid,"NumMiss")			//MISS数
		_struct(ID_REC_EARLY)=GetINIvalue(WebAPI_resraw,_uuid,"NumEarly")		//EARLY判定数
		_struct(ID_REC_LATE)=GetINIvalue(WebAPI_resraw,_uuid,"NumLate")			//LATE判定数
		_struct(ID_REC_MAXCOMBO)=GetINIvalue(WebAPI_resraw,_uuid,"MaxCombo")		//最大コンボ数
		_struct(ID_REC_PACE_4BINHEX)=GetINIvalue(WebAPI_resraw,_uuid,"Gauge_64")	//ゲージグラフ(base64処理済み)
		_struct(ID_REC_SCORE_4BINHEX)=GetINIvalue(WebAPI_resraw,_uuid,"Score_64")	//スコアグラフ(base64処理済み)
		_struct(ID_REC_CLEARTYPE)=GetINIvalue(WebAPI_resraw,_uuid,"Type")		//クリアの種類
		_struct(ID_REC_DATE)=GetINIvalue(WebAPI_resraw,_uuid,"Date")			//日時
		_struct(ID_REC_AP)=GetINIvalue(WebAPI_resraw,_uuid,"Ability")			//能力値
	return

	//スコアデータを送信
	#deffunc WebAPI_SendNewRecord str _data
		if OfflinePass@ :return
		sdim WebAPI_resraw
		CheckNetworkConnection
		sdim tmpvar,1024*1024:tmpvar=_data
		WebAPI_resraw=WebAPI_Post("http://"+WebAPI_HostAddress+"/API-SendNewRecord.php",tmpvar)
		sdim tmpvar
	return

	//世界ランキングを取得
	#defcfunc WebAPI_GetGlobalRanking
		if OfflinePass@ :return""
		CheckNetworkConnection
	return WebAPI_Get("http://"+WebAPI_HostAddress+"/API-GetGlobalRanking.php?key="+GetINIvalue(coreBuf@_load_,"PortalSvc","APIkey_GetGlobalRanking"))

	//世界ランキングにスコアを送信
	#deffunc WebAPI_SendGlobalRanking str _uuid,int _score
		if OfflinePass@ :return""
		CheckNetworkConnection
	return WebAPI_Get("http://"+WebAPI_HostAddress+"/API-SendGlobalRanking.php?key="+GetINIvalue(coreBuf@_load_,"PortalSvc","APIkey_SendGlobalRanking")+"&name="+RegName@portalsync+"&id="+_uuid+"&score="+_score)

	//プロフィールを保存
	#deffunc WebAPI_SendProfile str _obj,str _val
		if OfflinePass@ :return""
	return WebAPI_Get("http://"+WebAPI_HostAddress+"/API-SendProfile.php?key="+GetINIvalue(coreBuf@_load_,"PortalSvc","APIkey_SendProfile")+"&id="+RegName@portalsync+"&password="+RegAuth@portalsync+"&decode="+WebAPI_DecodeKey+"&object="+_obj+"&value="+_val)

	//レポートを送信
	#deffunc WebAPI_SendReport str _main
		if OfflinePass@ :return""
	return WebAPI_Post("http://"+WebAPI_HostAddress+"/API-SendReport.php","id="+RegName@portalsync+"&msg="+_main)

	//プロフィールをまとめて保存（初期化）
	#deffunc WebAPI_mSendProfile_Init
		sdim tmpsendcue
		dim tmpsendcue_max
		return

	//プロフィールをまとめて保存（登録）
	#deffunc WebAPI_mSendProfile_Reg str _key,str _value
		tmpsendcue+"object_"+tmpsendcue_max+"="+_key+"&value_"+tmpsendcue_max+"="+_value+"&"
		tmpsendcue_max++
		return

	//プロフィールをまとめて保存（送信）
	#deffunc WebAPI_mSendProfile_Send
		return WebAPI_Post("http://"+WebAPI_HostAddress+"/API-SendProfile-Multiple.php?key="+GetINIvalue(coreBuf@_load_,"PortalSvc","APIkey_SendProfile")+"&id="+RegName@portalsync+"&password="+RegAuth@portalsync+"&decode="+WebAPI_DecodeKey,tmpsendcue)

	//プロフィールをすべて保存
	#deffunc SendAllProfile
		if OfflinePass@ :return
		if RegName@portalsync=="" :return
		if RegAuth@portalsync=="" :return
		if InitLoadFlag@==FALSE :return
		CheckNetworkConnection
		WebAPI_mSendProfile_Init
		WebAPI_mSendProfile_Reg"XODA.LEVEL",str(RegLev@portalsync)
		WebAPI_mSendProfile_Reg"XODA.EXP",str(RegEXP@portalsync)
		WebAPI_mSendProfile_Reg"XODA.RATE",str(RegPfPoint@portalsync)
		WebAPI_mSendProfile_Reg"XODA.BADGE",str(RegBadge@portalsync)
		WebAPI_mSendProfile_Reg"XODA.PARTNER",str(RegCharID@portalsync)
		WebAPI_mSendProfile_Reg"XODA.OPTION.ADDSPEED",str(AddSpeed@)
		WebAPI_mSendProfile_Reg"XODA.OPTION.GAUGE",str(GaugeType@)
		WebAPI_mSendProfile_Reg"XODA.OPTION.PLACEMENT",str(ObjPlacement@)
		WebAPI_mSendProfile_Reg"XODA.OPTION.TARGET",str(TargetScoreRank@)
		WebAPI_mSendProfile_Reg"XODA.OPTION.JUDGEOFFSET",str(JudgeOffset@)
		WebAPI_mSendProfile_Reg"XODA.OPTION.DISPOFFSET",str(DispOffset@)
		WebAPI_mSendProfile_Reg"XODA.OPTION.AUTOPLAY",str(AutoPlayFlag@)
		WebAPI_mSendProfile_Reg"XODA.OPTION.BONUSFLAG",str(drawbonusFlag@)
		WebAPI_mSendProfile_Reg"XODA.MUSICSELECT.CURSORID",str(musicselect_ItemID@)
		WebAPI_mSendProfile_Reg"XODA.MUSICSELECT.LEVELID",str(musicselect_LevelID@)
		WebAPI_mSendProfile_Reg"XODA.NUMFRAGMENTS",str(NumFragments@portalsync)
		WebAPI_mSendProfile_Reg"XODA.NUMTICKETS",str(NumTickets@portalsync)
		WebAPI_mSendProfile_Reg"XODA.NUMLILLY",str(NumLilly@portalsync)
		WebAPI_mSendProfile_Reg"XODA.CHAPTERMAPID",str(ChapterMapID@portalsync)
		WebAPI_mSendProfile_Reg"XODA.CHAPTERSTEPID",str(ChapterStepID@portalsync)
		WebAPI_mSendProfile_Reg"XODA.WATCHTUTORIAL.MUSICSELECT.0",str(WatchTutorial_MusicSelect_0@)
		WebAPI_mSendProfile_Reg"XODA.WATCHTUTORIAL.MUSICSELECT.1",str(WatchTutorial_MusicSelect_1@)
		WebAPI_mSendProfile_Reg"XODA.WATCHTUTORIAL.PLAYOPTION",str(WatchTutorial_Option@)

		WebAPI_mSendProfile_Reg"XODA.LIBREC.PLAYCOUNT",str(librec_PlayCount@)
		WebAPI_mSendProfile_Reg"XODA.LIBREC.NUMALLEX",str(librec_numallex@)
		WebAPI_mSendProfile_Reg"XODA.LIBREC.NUMFULLCOMBO",str(librec_numfullcombo@)
		WebAPI_mSendProfile_Reg"XODA.LIBREC.NUMMADNESS",str(librec_nummadness@)
		WebAPI_mSendProfile_Reg"XODA.LIBREC.NUMEXPERT",str(librec_numexpert@)
		WebAPI_mSendProfile_Reg"XODA.LIBREC.NUMCLEAR",str(librec_numclear@)
		WebAPI_mSendProfile_Reg"XODA.LIBREC.NUMASSIST",str(librec_numassist@)
		WebAPI_mSendProfile_Reg"XODA.LIBREC.NUMFAILED",str(librec_numfailed@)
		WebAPI_mSendProfile_Reg"XODA.LIBREC.NUMRETIRE",str(librec_numretire@)
		WebAPI_mSendProfile_Reg"XODA.LIBREC.NUMJEXCELLENT",str(librec_numjexcellent@)
		WebAPI_mSendProfile_Reg"XODA.LIBREC.NUMJGREAT",str(librec_numjgreat@)
		WebAPI_mSendProfile_Reg"XODA.LIBREC.NUMJGOOD",str(librec_numjgood@)
		WebAPI_mSendProfile_Reg"XODA.LIBREC.NUMJBAD",str(librec_numjbad@)
		WebAPI_mSendProfile_Reg"XODA.LIBREC.NUMJMISS",str(librec_numjmiss@)
		WebAPI_mSendProfile_Reg"XODA.LIBREC.NUMKEYPUSH",str(librec_numkeypush@)
		WebAPI_mSendProfile_Reg"XODA.LIBREC.TOTALSCORE",str(librec_totalscore@)
		WebAPI_mSendProfile_Reg"XODA.LIBREC.CONSLILLY",str(librec_conslilly@)
		WebAPI_mSendProfile_Reg"XODA.LIBREC.CONSTICKET",str(librec_consticket@)
		WebAPI_mSendProfile_Reg"XODA.LIBREC.CONSFRAGMENT",str(librec_consfragment@)
		WebAPI_mSendProfile_Reg"XODA.LIBREC.LOGINCOUNT",str(librec_logincount@)
		WebAPI_mSendProfile_Send
	return

	//接続ハッシュ取得
	#defcfunc WebAPI_Connection
		if WebAPI_Get("http://"+WebAPI_HostAddress+"/connection.php")==Acckey@ :return TRUE:else:return FALSE

	//接続チェック
	#deffunc CheckNetworkConnection
		if WebAPI_Connection() :return
		ShowErrorMsg"ERROR_SVC_CONNECTION"
		return

#global