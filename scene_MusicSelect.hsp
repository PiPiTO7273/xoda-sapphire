
#module _MusicSelect_

	//DXライブラリグラフィック(musicselect)
	#enum ilayer_all	=	0
	#enum ibg
	#enum ibg_Load
	#enum ibg_nextstage
	#enum iwindow_category
	#enum iwindow_songs
	#enum iwindow_ranking
	#enum iwindow_option_obj
	#enum ifolder_all
	#enum ifolder_rank_ex
	#enum ifolder_rank_s
	#enum ifolder_rank_aaa
	#enum ifolder_rank_aa
	#enum ifolder_rank_a
	#enum ifolder_rank_b
	#enum ifolder_rank_c
	#enum ifolder_allex
	#enum ifolder_fullcombo
	#enum ifolder_madness
	#enum ifolder_expert
	#enum ifolder_normal
	#enum ifolder_assist
	#enum ibg_window
	#enum inav
	#enum inav_nextstage
	#enum ibg_item
	#enum icursor_category
	#enum icursor_list
	#enum ibg_meta
	#enum ibg_detail
	#enum ilayer_nodata
	#enum ibutton_start_0
	#enum ibutton_start_1
	#enum ibutton_start_2
	#enum ibutton_normal_0
	#enum ibutton_normal_1
	#enum ibutton_normal_2
	#enum ibutton_hard_0
	#enum ibutton_hard_1
	#enum ibutton_hard_2
	#enum ibutton_chaos_0
	#enum ibutton_chaos_1
	#enum ibutton_chaos_2
	#enum iIcon_rank_1
	#enum iIcon_rank_2
	#enum iIcon_rank_3
	#enum iIcon_rank_def
	#enum iIcon_difficulty_star_0
	#enum iIcon_difficulty_star_1
	#enum iIcon_difficulty_star_2
	#enum iIcon_Artwork_Dummy
	#enum iIcon_item_normal
	#enum iIcon_item_hard
	#enum iIcon_item_chaos
	#enum iIcon_normal
	#enum iIcon_hard
	#enum iIcon_chaos
	#enum ibutton_option_0
	#enum ibutton_option_1
	#enum ibutton_option_2
	#enum ibg_option
	#enum iobj_bg
	#enum iobj_button_left
	#enum iobj_button_right
	#enum iobj_button_change
	#enum iobj_switch_off
	#enum iobj_switch_on
	#enum ibg_lanepreview
	#enum ibg_playerinfo
	#enum inote_preview
	#enum ilanehide
	#enum ibadge_failed
	#enum ibadge_assist
	#enum ibadge_clear
	#enum ibadge_expert
	#enum ibadge_madness
	#enum ibadge_fc
	#enum ibadge_allex
	#enum ilayer_playerinfo_button
	#enum ilocked_window
	#enum ilillyerror_window
	#enum iIcon_Artwork_Locked
	#enum ibutton_lilly
	#enum ibutton_lilly_hover
	#enum itutorial_window_0
	#enum itutorial_window_1
	#enum itutorial_option

	//BASS Audio Libraryサンプル、チャンネルハンドル(musicselect)
	#enum bgmMain	=	0
	#enum bgmConfig
	#enum sndCancel
	#enum sndChange_0
	#enum sndCursor
	#enum sndDecide
	#enum sndError
	#enum sndNotification
	#enum sndText

	//DXライブラリフォントハンドル(musicselect)
	#enum fEOEXB16			=	0
	#enum fEOEXB20
	#enum fFAB50
	#enum fNSCJM12
	#enum fNSCJM15
	#enum fNSCJM16
	#enum fNSCJM20
	#enum fNSCJM24
	#enum fNSCJM32
	#enum fPS14
	#enum fPS16
	#enum fPS18
	#enum fPS20
	#enum fPS24
	#enum fSQNUM16
	#enum fSQNUM24
	#enum fSQNUM40

	//ホイール対応ウィンドウ
	#enum ID_CATEGORY	=	0
	#enum ID_SONGS
	#enum ID_RANKING
	#enum ID_OPTION

	//判定データの識別ID
	#enum ID_DATA_EXCELLENT	=	0
	#enum ID_DATA_GREAT
	#enum ID_DATA_GOOD
	#enum ID_DATA_BAD
	#enum ID_DATA_MISS
	#enum ID_DATA_EARLY
	#enum ID_DATA_LATE
	#enum ID_DATA_RATIO

	//譜面フィルター
	#enum ID_CAT_ALL		=	0
	#enum ID_CAT_RANK_EX
	#enum ID_CAT_RANK_S
	#enum ID_CAT_RANK_AAA
	#enum ID_CAT_RANK_AA
	#enum ID_CAT_RANK_A
	#enum ID_CAT_RANK_B
	#enum ID_CAT_RANK_C
	#enum ID_CAT_TYPE_ALLEX
	#enum ID_CAT_TYPE_FC
	#enum ID_CAT_TYPE_MADNESS
	#enum ID_CAT_TYPE_EXPERT
	#enum ID_CAT_TYPE_CLEAR
	#enum ID_CAT_TYPE_ASSIST

	//ジャンプ先ID
	#enum ID_TRANS_NULL		=	0
	#enum ID_TRANS_PLAY
	#enum ID_TRANS_PARTNERSELECT
	#enum ID_TRANS_BACKSCENE

	//個数
	#const NUM_ITEM_CATEGORY		14

	#deffunc LoadMusicSelectImages
		;DrawLoadScreen
		dim hdximg
		SetDXArchiveExtension"bin"
		hdximg(ilayer_all)=MakeScreen(BufWidth@,BufHeight@,TRUE)
		hdximg(ibg)=hdximg@(ibg_common_0)
		hdximg(ibg_Load)=hdximg@(ibg_common_1)
		hdximg(ibg_nextstage)=LoadGraph("Data/bg_nextstage.png")
		hdximg(ifolder_all)=LoadGraph("Data/res_musicselect_item/category_all.png")
		hdximg(ifolder_rank_ex)=LoadGraph("Data/res_musicselect_item/category_rank_ex.png")
		hdximg(ifolder_rank_s)=LoadGraph("Data/res_musicselect_item/category_rank_s.png")
		hdximg(ifolder_rank_aaa)=LoadGraph("Data/res_musicselect_item/category_rank_aaa.png")
		hdximg(ifolder_rank_aa)=LoadGraph("Data/res_musicselect_item/category_rank_aa.png")
		hdximg(ifolder_rank_a)=LoadGraph("Data/res_musicselect_item/category_rank_a.png")
		hdximg(ifolder_rank_b)=LoadGraph("Data/res_musicselect_item/category_rank_b.png")
		hdximg(ifolder_rank_c)=LoadGraph("Data/res_musicselect_item/category_rank_c.png")
		hdximg(ifolder_allex)=LoadGraph("Data/res_musicselect_item/category_allex.png")
		hdximg(ifolder_fullcombo)=LoadGraph("Data/res_musicselect_item/category_fullcombo.png")
		hdximg(ifolder_madness)=LoadGraph("Data/res_musicselect_item/category_madness.png")
		hdximg(ifolder_expert)=LoadGraph("Data/res_musicselect_item/category_expert.png")
		hdximg(ifolder_normal)=LoadGraph("Data/res_musicselect_item/category_normal.png")
		hdximg(ifolder_assist)=LoadGraph("Data/res_musicselect_item/category_assist.png")
		hdximg(ibg_window)=LoadGraph("Data/bg_musicselect_window.png")
		hdximg(inav)=LoadGraph("Data/Nav_MusicSelect.png")
		hdximg(inav_nextstage)=LoadGraph("Data/Nav_Nextstage.png")
		hdximg(ibg_item)=LoadGraph("Data/res_musicselect_item/bg_item.png")
		hdximg(icursor_category)=LoadGraph("Data/cursor_musicselect_category.png")
		hdximg(icursor_list)=LoadGraph("Data/cursor_musicselect_list.png")
		hdximg(ibg_meta)=LoadGraph("Data/bg_musicselect_metadata.png")
		hdximg(ibg_detail)=LoadGraph("Data/bg_musicselect_detail.png")
		hdximg(ilayer_nodata)=LoadGraph("Data/layer_musicselect_nodata.png")
		hdximg(ibutton_start_0)=LoadGraph("Data/res_musicselect_button_start/0.png")
		hdximg(ibutton_start_1)=LoadGraph("Data/res_musicselect_button_start/1.png")
		hdximg(ibutton_start_2)=LoadGraph("Data/res_musicselect_button_start/2.png")
		hdximg(ibutton_normal_0)=LoadGraph("Data/res_musicselect_button_difficulty/normal_0.png")
		hdximg(ibutton_normal_1)=LoadGraph("Data/res_musicselect_button_difficulty/normal_1.png")
		hdximg(ibutton_normal_2)=LoadGraph("Data/res_musicselect_button_difficulty/normal_2.png")
		hdximg(ibutton_hard_0)=LoadGraph("Data/res_musicselect_button_difficulty/hard_0.png")
		hdximg(ibutton_hard_1)=LoadGraph("Data/res_musicselect_button_difficulty/hard_1.png")
		hdximg(ibutton_hard_2)=LoadGraph("Data/res_musicselect_button_difficulty/hard_2.png")
		hdximg(ibutton_chaos_0)=LoadGraph("Data/res_musicselect_button_difficulty/chaos_0.png")
		hdximg(ibutton_chaos_1)=LoadGraph("Data/res_musicselect_button_difficulty/chaos_1.png")
		hdximg(ibutton_chaos_2)=LoadGraph("Data/res_musicselect_button_difficulty/chaos_2.png")
		hdximg(iIcon_rank_1)=LoadGraph("Data/Icon_Rank_1.png")
		hdximg(iIcon_rank_2)=LoadGraph("Data/Icon_Rank_2.png")
		hdximg(iIcon_rank_3)=LoadGraph("Data/Icon_Rank_3.png")
		hdximg(iIcon_rank_def)=LoadGraph("Data/Icon_Rank_4.png")
		hdximg(iIcon_difficulty_star_0)=LoadGraph("Data/Icon_Difficulty_0.png")
		hdximg(iIcon_difficulty_star_1)=LoadGraph("Data/Icon_Difficulty_1.png")
		hdximg(iIcon_difficulty_star_2)=LoadGraph("Data/Icon_Difficulty_2.png")
		hdximg(iIcon_Artwork_Dummy)=LoadGraph("Data/Icon_Artwork_Dummy.png")
		hdximg(iIcon_item_normal)=LoadGraph("Data/Icon_item_Normal.png")
		hdximg(iIcon_item_hard)=LoadGraph("Data/Icon_item_Hard.png")
		hdximg(iIcon_item_chaos)=LoadGraph("Data/Icon_item_Chaos.png")
		hdximg(iIcon_normal)=LoadGraph("Data/Icon_musicselect_normal.png")
		hdximg(iIcon_hard)=LoadGraph("Data/Icon_musicselect_hard.png")
		hdximg(iIcon_chaos)=LoadGraph("Data/Icon_musicselect_chaos.png")
		hdximg(ibutton_option_0)=LoadGraph("Data/res_musicselect_button_option/0.png")
		hdximg(ibutton_option_1)=LoadGraph("Data/res_musicselect_button_option/1.png")
		hdximg(ibutton_option_2)=LoadGraph("Data/res_musicselect_button_option/2.png")
		hdximg(ibg_option)=LoadGraph("Data/bg_musicselect_option.png")
		hdximg(iobj_bg)=LoadGraph("Data/res_obj_option/bg.png")
		hdximg(iobj_button_left)=LoadGraph("Data/res_obj_option/button_left.png")
		hdximg(iobj_button_right)=LoadGraph("Data/res_obj_option/button_right.png")
		hdximg(iobj_button_change)=LoadGraph("Data/res_obj_option/button_change.png")
		hdximg(iobj_switch_off)=LoadGraph("Data/res_obj_option/switch_off.png")
		hdximg(iobj_switch_on)=LoadGraph("Data/res_obj_option/switch_on.png")
		hdximg(ibg_lanepreview)=LoadGraph("Data/bg_musicselect_preview.png")
		hdximg(ilanehide)=LoadGraph("Data/layer_musicselect_lanehide.png")
		hdximg(ibg_playerinfo)=LoadGraph("Data/bg_musicselect_playerinfo.png")
		hdximg(ibadge_failed)=LoadGraph("Data/Icon_Badge_Failed.png")
		hdximg(ibadge_assist)=LoadGraph("Data/Icon_Badge_Assist.png")
		hdximg(ibadge_clear)=LoadGraph("Data/Icon_Badge_Clear.png")
		hdximg(ibadge_expert)=LoadGraph("Data/Icon_Badge_Expert.png")
		hdximg(ibadge_madness)=LoadGraph("Data/Icon_Badge_Madness.png")
		hdximg(ibadge_fc)=LoadGraph("Data/Icon_Badge_FullCombo.png")
		hdximg(ibadge_allex)=LoadGraph("Data/Icon_Badge_AllEx.png")
		hdximg(ilayer_playerinfo_button)=LoadGraph("Data/layer_playerinfo_button.png")
		hdximg(ilocked_window)=LoadGraph("Data/layer_musicselect_locked.png")
		hdximg(iIcon_Artwork_Locked)=LoadGraph("Data/Icon_Artwork_Locked.png")
		hdximg(ibutton_lilly)=LoadGraph("Data/layer_musicselect_button_lilly.png")
		hdximg(ibutton_lilly_hover)=LoadGraph("Data/layer_musicselect_button_lilly_hover.png")
		hdximg(ilillyerror_window)=LoadGraph("Data/layer_musicselect_lillyerror.png")
		hdximg(itutorial_window_0)=LoadGraph("Data/guide_musicselect_0.png")
		hdximg(itutorial_window_1)=LoadGraph("Data/guide_musicselect_1.png")
		hdximg(itutorial_option)=LoadGraph("Data/guide_option.png")
		hdximg(iwindow_category)=MakeScreen(450,811,TRUE)
		hdximg(iwindow_songs)=MakeScreen(700,811,TRUE)
		hdximg(iwindow_ranking)=MakeScreen(350,210,TRUE)
		hdximg(iwindow_option_obj)=MakeScreen(770,790,TRUE)
	return

	#deffunc LoadMusicSelectSounds
		;DrawLoadScreen
		dim64 hbasschannel:dim64 hbasssample
		/*LoadBASSsample"Data/snd_cancel.wav",hbasschannel(sndCancel),hbasssample(sndCancel),NULL
		LoadBASSsample"Data/snd_change_0.wav",hbasschannel(sndChange_0),hbasssample(sndChange_0),NULL
		LoadBASSsample"Data/snd_cursor.wav",hbasschannel(sndCursor),hbasssample(sndCursor),NULL
		LoadBASSsample"Data/snd_decide.wav",hbasschannel(sndDecide),hbasssample(sndDecide),NULL
		LoadBASSsample"Data/snd_error.wav",hbasschannel(sndError),hbasssample(sndError),NULL
		LoadBASSsample"Data/snd_notification.wav",hbasschannel(sndNotification),hbasssample(sndNotification),NULL
		LoadBASSsample"Data/snd_text.wav",hbasschannel(sndText),hbasssample(sndText),NULL*/
		hbasschannel(sndCancel)=hcommonsech@(sndCancel@)
		hbasschannel(sndChange_0)=hcommonsech@(sndChange_0@)
		hbasschannel(sndCursor)=hcommonsech@(sndCursor@)
		hbasschannel(sndDecide)=hcommonsech@(sndDecide@)
		hbasschannel(sndError)=hcommonsech@(sndError@)
		hbasschannel(sndNotification)=hcommonsech@(sndNotification@)
		hbasschannel(sndText)=hcommonsech@(sndText@)
	return

	//曲選択画面で使用するフォントの初期化
	#deffunc InitMusicSelectFonts
		InitFontToHandle
		dim hdxfont
		hdxfont(fEOEXB16)=LoadFontDataToHandle("Data/eoexb16.bin")
		hdxfont(fEOEXB20)=LoadFontDataToHandle("Data/eoexb20.bin")
		hdxfont(fFAB50)=LoadFontDataToHandle("Data/fab50.bin")
		hdxfont(fNSCJM12)=LoadFontDataToHandle("Data/nscjm12.bin")
		hdxfont(fNSCJM15)=LoadFontDataToHandle("Data/nscjm15.bin")
		hdxfont(fNSCJM16)=LoadFontDataToHandle("Data/nscjm16.bin")
		hdxfont(fNSCJM20)=LoadFontDataToHandle("Data/nscjm20.bin")
		hdxfont(fNSCJM24)=LoadFontDataToHandle("Data/nscjm24.bin")
		hdxfont(fNSCJM32)=LoadFontDataToHandle("Data/nscjm32.bin")
		hdxfont(fPS14)=LoadFontDataToHandle("Data/ps14.bin")
		hdxfont(fPS16)=LoadFontDataToHandle("Data/ps16.bin")
		hdxfont(fPS18)=LoadFontDataToHandle("Data/ps18.bin")
		hdxfont(fPS20)=LoadFontDataToHandle("Data/ps20.bin")
		hdxfont(fPS24)=LoadFontDataToHandle("Data/ps24.bin")
		hdxfont(fSQNUM40)=LoadFontDataToHandle("Data/sqnum40.bin")
		hdxfont(fSQNUM24)=LoadFontDataToHandle("Data/sqnum24.bin")
		hdxfont(fSQNUM16)=LoadFontDataToHandle("Data/sqnum16.bin")

		SetFontLineSpaceToHandle 26,hdxfont(fNSCJM20)
	return

	//IRを同期
	#deffunc IRsync
		;DrawLoadScreen
		sdim IRsyncbuf
		IRsyncbuf=WebAPI_GetRecord()
		;DrawLoadScreen
		sdim IRrankbuf
		IRrankbuf=WebAPI_GetGlobalRanking()
		dim FirstLoadFlag
		return

	//ライブラリをスキャン
	#deffunc ScanAllPlaylist

			//前回読み込んだデータを削除
			if InitMusicSelectFlag :DeleteMusicSelectResource

			dim numitem

			numitem=int(GetINIvalue(coreBuf@_load_,"Playlist","Reg.Max"))	//項目数

			//変数初期化
			sdim plitem_Title,64,numitem,3
			sdim plitem_Artist,64,numitem,3
			sdim plitem_Source,64,numitem,3
			sdim plitem_UUID,32,numitem,3
			sdim plitem_resID,32,numitem,3
			sdim plitem_Path,64,numitem,3
			dim plitem_Level,numitem,3
			dim plitem_artwork,numitem,3
			sdim plitem_artworkpath,32,numitem,3
			dim64 plitem_hsmppreview,numitem,3
			dim64 plitem_hchpreview,numitem,3
			dim plitem_mybest_score,numitem,3
			sdim plitem_mybest_rank,4,numitem,3
			sdim plitem_mybest_rate,5,numitem,3
			sdim plitem_mybest_cleartype,16,numitem,3
			dim plitem_mybest_judge,numitem,3,7
			sdim plitem_mybest_ratio,8,numitem,3
			sdim plitem_mybest_gauge,350,numitem,3
			sdim plitem_ir_name,32,numitem,3,100
			dim plitem_ir_score,numitem,3,100
			dim plitem_ir_myrank,numitem,3
			dim plitem_ir_maxrank,numitem,3
			ddim plitem_defbpm,numitem,3
			ddim plitem_pfpoint,numitem,3
			dim plitem_totalnotes,numitem,3
			sdim plitem_unlockrawdata,32,numitem,3
			dim plitem_unlockflag,numitem,3
			dim plitem_unlocklilly,numitem,3
			dim numUnlocked
			dim InitMusicSelectFlag:InitMusicSelectFlag=TRUE

			ddim RegPfPoint@portalsync,1
			ddim PfPointArr,10
			dim PfPointArrMax

			exist"Data/_cache/music_playlist_meta.bin"
			if strsize!-1 {
				sdim metaCache,strsize
				bload"Data/_cache/music_playlist_meta.bin",metaCache
			} else {
				sdim metaCache
			}

			//解析
			repeat numitem
				sdim tmpstr:tmpstr=GetINIvalue(coreBuf@_load_,"Playlist","ID."+cnt)
				split tmpstr,",",plitem_UUID(cnt,0),plitem_UUID(cnt,1),plitem_UUID(cnt,2)
				dim plitemid:plitemid=cnt
				repeat 3
					;DrawLoadScreen
					dim pllevid:pllevid=cnt
					plitem_Path(plitemid,pllevid)="Data/map-"+plitem_UUID(plitemid,pllevid)+".bin"
					//譜面ファイルの存在を確認
					exist plitem_Path(plitemid,pllevid)
					if strsize!-1 {
						//IR取得
						sdim IRsyncstruct
						WebAPI_SyncRecord IRsyncbuf,plitem_UUID(plitemid,pllevid),IRsyncstruct

						//メタデータをキャッシュから読み込み
						if GetINIvalue(metaCache,plitem_UUID(plitemid,pllevid),"Flag")=="TRUE" {
							plitem_Title(plitemid,pllevid)=GetINIvalue(metaCache,plitem_UUID(plitemid,pllevid),"Title")
							plitem_Artist(plitemid,pllevid)=GetINIvalue(metaCache,plitem_UUID(plitemid,pllevid),"Artist")
							plitem_Source(plitemid,pllevid)=GetINIvalue(metaCache,plitem_UUID(plitemid,pllevid),"Source")
							plitem_Level(plitemid,pllevid)=int(GetINIvalue(metaCache,plitem_UUID(plitemid,pllevid),"Level"))
							plitem_resID(plitemid,pllevid)=GetINIvalue(metaCache,plitem_UUID(plitemid,pllevid),"Resource")
							plitem_defbpm(plitemid,pllevid)=double(GetINIvalue(metaCache,plitem_UUID(plitemid,pllevid),"Default.BPM"))
							plitem_artworkpath(plitemid,pllevid)=GetINIvalue(metaCache,plitem_UUID(plitemid,pllevid),"Artwork")
							plitem_unlockrawdata(plitemid,pllevid)=GetINIvalue(metaCache,plitem_UUID(plitemid,pllevid),"Unlock")
						} else {
							//譜面データからメタデータを読み込み
							sdim tmpstr,strsize:bload plitem_Path(plitemid,pllevid),tmpstr
							plitem_Title(plitemid,pllevid)=GetINIvalue(tmpstr,"Metadata","Title")
							plitem_Artist(plitemid,pllevid)=GetINIvalue(tmpstr,"Metadata","Artist")
							plitem_Source(plitemid,pllevid)=GetINIvalue(tmpstr,"Metadata","Source")
							plitem_Level(plitemid,pllevid)=int(GetINIvalue(tmpstr,"Metadata","Level"))
							plitem_resID(plitemid,pllevid)=GetINIvalue(tmpstr,"Metadata","Resource")
							plitem_defbpm(plitemid,pllevid)=double(GetINIvalue(tmpstr,"Metadata","Default.BPM"))
							plitem_artworkpath(plitemid,pllevid)=GetINIvalue(tmpstr,"Metadata","Artwork")
							plitem_unlockrawdata(plitemid,pllevid)=GetINIvalue(tmpstr,"Metadata","Unlock")

							//ノーツ数を取得
							if GetINIvalue(tmpstr,"Metadata","Total.Notes")=="" {
								notesel tmpstr
								repeat notemax
									noteget tmpstr(1),cnt
									if strmid(tmpstr(1),0,5)=="Note." :plitem_totalnotes(plitemid,pllevid)++
								loop
								noteunsel
								INIInit plitem_Path(plitemid,pllevid)
								INISet"Metadata","Total.Notes",str(plitem_totalnotes(plitemid,pllevid))
							} else {
								plitem_totalnotes(plitemid,pllevid)=int(GetINIvalue(tmpstr,"Metadata","Total.Notes"))
							}

							//キャッシュに書き込み
							INIInit"Data/_cache/music_playlist_meta.bin"
							INISet plitem_UUID(plitemid,pllevid),"Flag","TRUE"
							INISet plitem_UUID(plitemid,pllevid),"Title",plitem_Title(plitemid,pllevid)
							INISet plitem_UUID(plitemid,pllevid),"Artist",plitem_Artist(plitemid,pllevid)
							INISet plitem_UUID(plitemid,pllevid),"Source",plitem_Source(plitemid,pllevid)
							INISet plitem_UUID(plitemid,pllevid),"Level",str(plitem_Level(plitemid,pllevid))
							INISet plitem_UUID(plitemid,pllevid),"Resource",plitem_resID(plitemid,pllevid)
							INISet plitem_UUID(plitemid,pllevid),"Default.BPM",str(plitem_defbpm(plitemid,pllevid))
							INISet plitem_UUID(plitemid,pllevid),"Artwork",plitem_artworkpath(plitemid,pllevid)
							INISet plitem_UUID(plitemid,pllevid),"Unlock",plitem_unlockrawdata(plitemid,pllevid)
							INISet plitem_UUID(plitemid,pllevid),"Total.Notes",str(plitem_totalnotes(plitemid,pllevid))

						}

						dim tmpint:tmpint=LoadGraph("Data/"+plitem_resID(plitemid,pllevid)+"/"+plitem_artworkpath(plitemid,pllevid))
						if tmpint<=0 :tmpint=hdximg(iIcon_Artwork_Dummy)
						plitem_artwork(plitemid,pllevid)=tmpint
						
						
						exist"Data/"+plitem_resID(plitemid,pllevid)+"/preview.ogg"
						sdim tmpstr,strsize
						bload"Data/"+plitem_resID(plitemid,pllevid)+"/preview.ogg",tmpstr
						plitem_hsmppreview(plitemid,pllevid)=cfunc64(RET_INT64,BASS_SampleLoad,TRUE,varptr64(tmpstr),0,varsize(tmpstr),32,0)
						plitem_hchpreview(plitemid,pllevid)=cfunc64(RET_INT64,BASS_SampleGetChannel,plitem_hsmppreview(plitemid,pllevid),0)
						sdim tmpstr

						//アンロック状況
						plitem_unlockflag(plitemid,pllevid)=TRUE
						plitem_unlocklilly(plitemid,pllevid)=0
						tmpstr(1)=plitem_unlockrawdata(plitemid,pllevid)
						if tmpstr(1)!"" {
							if tmpstr(1)=="{mission}" {
								plitem_unlockflag(plitemid,pllevid)=FALSE
								plitem_unlocklilly(plitemid,pllevid)=0
							}
							if strmid(tmpstr(1),0,6)=="lilly:" {
								strrep tmpstr(1),"lilly:",""
								plitem_unlockflag(plitemid,pllevid)=FALSE
								plitem_unlocklilly(plitemid,pllevid)=int(tmpstr(1))
							}
						} else :plitem_unlockflag(plitemid,pllevid)=TRUE
						if GetChartUnlockFlag(plitem_UUID(plitemid,pllevid))==1 :plitem_unlockflag(plitemid,pllevid)=TRUE

						if plitem_unlockflag(plitemid,pllevid) {
							numUnlocked++
						}

						//IR解析
						plitem_mybest_score(plitemid,pllevid)=int(IRsyncstruct(ID_REC_SCORE))
						plitem_mybest_rank(plitemid,pllevid)=GetScoreRank(double(plitem_mybest_score(plitemid,pllevid))/10000000.0*100.0)
						plitem_mybest_rate(plitemid,pllevid)=strf("%.1f",double(plitem_mybest_score(plitemid,pllevid))/10000000.0*100.0)+"%"
						plitem_mybest_cleartype(plitemid,pllevid)=IRsyncstruct(ID_REC_CLEARTYPE)
						plitem_mybest_judge(plitemid,pllevid,ID_DATA_EXCELLENT)=int(IRsyncstruct(ID_REC_EXCELLENT))
						plitem_mybest_judge(plitemid,pllevid,ID_DATA_GREAT)=int(IRsyncstruct(ID_REC_GREAT))
						plitem_mybest_judge(plitemid,pllevid,ID_DATA_GOOD)=int(IRsyncstruct(ID_REC_GOOD))
						plitem_mybest_judge(plitemid,pllevid,ID_DATA_BAD)=int(IRsyncstruct(ID_REC_BAD))
						plitem_mybest_judge(plitemid,pllevid,ID_DATA_MISS)=int(IRsyncstruct(ID_REC_MISS))
						plitem_mybest_judge(plitemid,pllevid,ID_DATA_EARLY)=int(IRsyncstruct(ID_REC_EARLY))
						plitem_mybest_judge(plitemid,pllevid,ID_DATA_LATE)=int(IRsyncstruct(ID_REC_LATE))
						dim tmpint:tmpint=limit(int(IRsyncstruct(ID_REC_EARLY))+int(IRsyncstruct(ID_REC_LATE)),1)
						plitem_mybest_ratio(plitemid,pllevid)=strf("%.1f",double(IRsyncstruct(ID_REC_EARLY))/double(tmpint))+"% / "
						plitem_mybest_ratio(plitemid,pllevid)+strf("%.1f",double(IRsyncstruct(ID_REC_LATE))/double(tmpint))+"%"
						if IRsyncstruct(ID_REC_PACE_4BINHEX)=="" {
							poke plitem_mybest_gauge(plitemid,pllevid),0,255
						} else {
							sdim HEXdecbin
							ConvHEXdec HEXdecbin,IRsyncstruct(ID_REC_PACE_4BINHEX)
							memcpy plitem_mybest_gauge(plitemid,pllevid),HEXdecbin,350
						}
						plitem_pfpoint(plitemid,pllevid)=double(IRsyncstruct(ID_REC_AP))
						//世界ランキング
						repeat 100
							sdim tmpstr:tmpstr=GetINIvalue(IRrankbuf,"SAVEDATA",plitem_UUID(plitemid,pllevid)+".RANK#"+(cnt+1))
							split tmpstr,",",plitem_ir_name(plitemid,pllevid,cnt),tmpstr(1)
							plitem_ir_score(plitemid,pllevid,cnt)=int(tmpstr(1))
						loop
						//自分の順位を取得
						plitem_ir_myrank(plitemid,pllevid)=-1
						repeat
							sdim tmpstr:tmpstr=GetINIvalue(IRrankbuf,"SAVEDATA",plitem_UUID(plitemid,pllevid)+".RANK#"+(cnt+1))
							split tmpstr,",",tmpstr(1),tmpstr(2)
							if tmpstr(1)==LoginUserInfo@(ID_NAME@) :plitem_ir_myrank(plitemid,pllevid)=cnt
							if tmpstr(1)==""&tmpstr(2)=="" :plitem_ir_maxrank(plitemid,pllevid)=cnt:break
						loop

						//総合能力値を計算
						PfPointArr(PfPointArrMax)=plitem_pfpoint(plitemid,pllevid)
						PfPointArrMax++
					}
				loop

				//DB出力
				;INIInit"core.ini"
				;INISet"Recommand","ID."+plitemid,plitem_Title(plitemid,0)+","+plitem_Artist(plitemid,0)
			loop

			//総合能力値の算出
			sortval PfPointArr,1
			repeat 10
				RegPfPoint@portalsync+PfPointArr(cnt)
			loop
			RegPfPoint@portalsync=RegPfPoint@portalsync/10.0

		ActiveColumnID(ID_SONGS)=0
		bfActiveColumnID(ID_SONGS)=0
	return

	#defcfunc GetNumUnlockedCharts
	return numUnlocked

	#defcfunc GetNumCharts
	return numitem*3

	#deffunc SetFilterRefDB int _ref
		dim c,numitem*3,3:dim lv,numitem*3,3:dim numfilteritem
		if _ref==ID_CAT_ALL {
			numfilteritem=numitem
			repeat numitem
				plitemid=cnt
				repeat 3
					pllevid=cnt
					c(plitemid,pllevid)=plitemid:lv(plitemid,pllevid)=pllevid
				loop
			loop
		}
		if _ref>=ID_CAT_RANK_EX&_ref<=ID_CAT_RANK_C {
			repeat numitem
				plitemid=cnt
				repeat 3
					pllevid=cnt
					if plitem_mybest_score(plitemid,pllevid)>=(9-(_ref-ID_CAT_RANK_EX))*1000000&plitem_mybest_score(plitemid,pllevid)<(9-(_ref-ID_CAT_RANK_EX)+1)*1000000 {
						c(numfilteritem,0)=plitemid:c(numfilteritem,1)=plitemid:c(numfilteritem,2)=plitemid
						lv(numfilteritem,0)=pllevid:lv(numfilteritem,1)=pllevid:lv(numfilteritem,2)=pllevid
						numfilteritem++
					}
				loop
			loop
		}
		if _ref>=ID_CAT_TYPE_ALLEX&_ref<=ID_CAT_TYPE_ASSIST {
			sdim tmpstr:tmpstr="ALL-EXCELLENT","FULLCOMBO","MADNESS-CLEAR","EXPERT-CLEAR","CLEAR","ASSIST-CLEAR"
			repeat numitem
				plitemid=cnt
				repeat 3
					pllevid=cnt
					if plitem_mybest_cleartype(plitemid,pllevid)==tmpstr(_ref-ID_CAT_TYPE_ALLEX) {
						c(numfilteritem,0)=plitemid:c(numfilteritem,1)=plitemid:c(numfilteritem,2)=plitemid
						lv(numfilteritem,0)=pllevid:lv(numfilteritem,1)=pllevid:lv(numfilteritem,2)=pllevid
						numfilteritem++
					}
				loop
			loop
		}
	return

	#deffunc StartMusicSelect

		//変数初期化
			dim RawWheelVal
			dim WheelVal,4
			dim ScrollEaseA,4
			dim ScrollEaseB,4
			dim OnScrollCount,4
			dim RawWheelVal
			dim bfRawWheelVal
			dim RawWheelMove
			dim bfHoverColumnID,2
			dim bfActiveColumnID,2
			dim HoverColumnID,2
			dim ActiveColumnID,2
			dim bfMouseInput
			dim CurSelLev
			dim PushButtonFlag
			dim DecideCount
			dim OptionWindowFlag
			dim OptionWindowCount
			dim SceneCount
			dim SongChangeCount
			dim CatChangeCount
			dim LClickKeepCount
			dim JumpSceneFlag
			dim JumpSceneCount
			dim JumpSceneID
			ddim PreviewBPM,1
			dim PreviewPosY
			dim SceneTransID
			dim SkipStartDarkFlag
			dim UnlockDialogID
			dim UnlockDialogCount
			dim BackButtonEase
			dim BackButtonHoverFlag
			dim TutorialWindowID
			dim TutorialWindowCount
			TutorialWindowID=-1
			DecideCount=-1

		ActiveColumnID(ID_SONGS)=musicselect_ItemID@
		CurSelLev=musicselect_LevelID@

		//BGM再生
			if BASS_ChannelIsActive(int(hcommonchannel@))!BASS_ACTIVE_PLAYING :PlaySE int(hcommonchannel@),0.65
			cfunc64v BASS_ChannelSetAttribute,hcommonchannel@,BASS_ATTRIB_VOL,d2f(0.65)

		//背景動画再生
			if cfunc64i(GetMovieStateToGraph,hdximg(ibg))==0 :PlayMovieToGraph hdximg(ibg),DX_PLAYTYPE_LOOP

		//チュートリアル
			if WatchTutorial_MusicSelect_0@==FALSE|WatchTutorial_MusicSelect_1@==FALSE :TutorialWindowID=0

		//プレビュー用
			hdximg(inote_preview)=LoadGraph("Data/res_playtheme/note_"+playtheme_Note@+".png")
	return

	#deffunc StartMusicSelect_WithoutDarkness
		StartMusicSelect
		SkipStartDarkFlag=TRUE
		SetFilterRefDB ActiveColumnID(ID_CATEGORY)
	return

	#deffunc DrawMusicSelect

		//カーソル位置補正
			dim CursorPosX:dim CursorPosY:dim MouseInput
			MouseInput=GetMouseInput()
			CursorPosX=limit(int(double(CursorPosX@)*(double(BufWidth@)/double(DispWidth@))),0,BufWidth@)
			CursorPosY=limit(int(double(CursorPosY@)*(double(BufHeight@)/double(DispHeight@))),0,BufHeight@)
			RawWheelVal=GetMouseWheelRotVol()
			RawWheelMove=0
			if RawWheelVal<0&bfRawWheelVal<0&RawWheelVal!bfRawWheelVal :RawWheelMove=RawWheelVal-bfRawWheelVal
			if RawWheelVal>0&bfRawWheelVal>0&RawWheelVal!bfRawWheelVal :RawWheelMove=RawWheelVal-bfRawWheelVal
			if (RawWheelVal>0&bfRawWheelVal<0)|(RawWheelVal<0&bfRawWheelVal>0) :RawWheelMove=RawWheelVal
			bfRawWheelVal=RawWheelVal
			PushButtonFlag=FALSE

			if SceneTransID==ID_TRANS_PLAY {
				//クリック無効化
				MouseInput=0
			}

		//チュートリアル判定
			if TutorialWindowID!-1 {
				if TutorialWindowCount>25 {
					if TutorialWindowID==0&(MouseInput&MOUSE_INPUT_LEFT)&insquare(CursorPosX,CursorPosY,1620,951,1620+200,951+80) {
						TutorialWindowID++
						TutorialWindowCount=0
					}
					if TutorialWindowID==1&(MouseInput&MOUSE_INPUT_LEFT)&insquare(CursorPosX,CursorPosY,150,914,150+200,914+80) {
						TutorialWindowID++
						TutorialWindowCount=0
					}
					if TutorialWindowID==3&(MouseInput&MOUSE_INPUT_LEFT)&insquare(CursorPosX,CursorPosY,120,899,120+200,899+80) {
						TutorialWindowID++
						TutorialWindowCount=0
					}
				}
				MouseInput=0
			}

		//チュートリアルを見る
			if KeyFlag@(KEY_INPUT_F1)==TRUE&bfKeyFlag@(KEY_INPUT_F1)==FALSE {
				TutorialWindowID=0
				TutorialWindowCount=0
			}

		//戻るボタン判定
			if insquare(CursorPosX,CursorPosY,0,1000,240,1080)&((MouseInput&MOUSE_INPUT_LEFT)==1)&((bfMouseInput&MOUSE_INPUT_LEFT)==0)&DecideCount==-1 {
				PushButtonFlag=TRUE
				PlaySE int(hbasschannel(sndDecide)),1.0
				DecideCount=0
				SceneTransID=ID_TRANS_BACKSCENE
			}

		//カーソル位置から項目IDを取得
			if OptionWindowFlag==0&DecideCount==-1 {
				HoverColumnID(ID_CATEGORY)=-1
				if insquare(CursorPosX,CursorPosY,0,229,450,229+811) {
					//カテゴリー選択
					repeat NUM_ITEM_CATEGORY
						dim SenseColumnPos
						SenseColumnPos=229+10+cnt*(50+8)+ScrollEaseB(ID_CATEGORY)
						if insquare(CursorPosX,CursorPosY,25,SenseColumnPos,25+640,SenseColumnPos+50) {
							HoverColumnID(ID_CATEGORY)=cnt
							break
						}
					loop
					bfHoverColumnID(ID_CATEGORY)=HoverColumnID(ID_CATEGORY)
					//ボタンが押された
					if ((MouseInput&MOUSE_INPUT_LEFT)==1)&((bfMouseInput&MOUSE_INPUT_LEFT)==0)&HoverColumnID(ID_CATEGORY)!-1 {
						dim tmpint:tmpint=ActiveColumnID(ID_CATEGORY)
						ActiveColumnID(ID_CATEGORY)=HoverColumnID(ID_CATEGORY)
						SetFilterRefDB ActiveColumnID(ID_CATEGORY)
						if numfilteritem==0 {
							SetFilterRefDB tmpint
							PlaySE int(hbasschannel(sndError)),0.7
							ActiveColumnID(ID_CATEGORY)=tmpint
						} else {
							ActiveColumnID(ID_SONGS)=0
							SongChangeCount=0:CatChangeCount=0
						}
						PushButtonFlag=TRUE
					}
				}
				HoverColumnID(ID_SONGS)=-1
				if insquare(CursorPosX,CursorPosY,450,229,450+700,229+811) {
					//曲選択
					repeat numfilteritem
						dim SenseColumnPos
						SenseColumnPos=229+10+cnt*(50+8)+ScrollEaseB(ID_SONGS)
						if insquare(CursorPosX,CursorPosY,450,SenseColumnPos,450+700,SenseColumnPos+50) {
							HoverColumnID(ID_SONGS)=cnt
							break
						}
					loop
					bfHoverColumnID(ID_SONGS)=HoverColumnID(ID_SONGS)
					//ボタンが押された
					if ((MouseInput&MOUSE_INPUT_LEFT)==1)&((bfMouseInput&MOUSE_INPUT_LEFT)==0)&HoverColumnID(ID_SONGS)!-1 {
						ActiveColumnID(ID_SONGS)=HoverColumnID(ID_SONGS)
						SongChangeCount=0
						PushButtonFlag=TRUE
					}
				}
			}

			repeat 3
				if plitem_UUID(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))=="*"|plitem_UUID(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))=="" {
					switch CurSelLev
						case 0:CurSelLev=2:swbreak
						case 1:CurSelLev=0:swbreak
						case 2:CurSelLev=1:swbreak
					swend
				} else:break
			loop

			if ActiveColumnID(ID_CATEGORY)==0 :musicselect_ItemID@=ActiveColumnID(ID_SONGS)
			musicselect_LevelID@=CurSelLev

		//背景動画
			SetDrawBlendMode DX_BLENDMODE_NOBLEND,256
			DrawExtendGraph 0,0,BufWidth@,BufHeight@,hdximg(ibg),FALSE
			if LowQuaFlag@==FALSE :GraphFilterRectBltS hdximg@(iScene),hdximg@(iScene),0,0,BufWidth@,BufHeight@,0,0,DX_GRAPH_FILTER_GAUSS,32,800

		//----以下、シーン別レイヤー-----
		SetDrawScreen hdximg(ilayer_all)
		ClearDrawScreen

		//ナビゲーション
			SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
			DrawGraph 48,32,hdximg(inav),TRUE

		//ウィンドウの背景
			SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
			DrawGraph 0,165,hdximg(ibg_window),TRUE

		//曲数
			setease 0,numfilteritem,ease_cubic_out
			SetDrawBlendMode DX_BLENDMODE_ALPHA,256
			DrawStringToHandle 1058,183,strf("%04d",getease(CatChangeCount,20)),Getcolor(255,255,255),hdxfont(fPS24)

		//カテゴリー選択ウィンドウ
			SetDrawScreen hdximg(iwindow_category)
			ClearDrawScreen
				if insquare(CursorPosX,CursorPosY,0,229,450,229+811) {
					WheelVal(ID_CATEGORY)=RawWheelMove
					RawWheelMove=0
				}
				if WheelVal(ID_CATEGORY)>0 { //＋
					ScrollEaseA(ID_CATEGORY)=ScrollEaseB(ID_CATEGORY)
					ScrollEaseB(ID_CATEGORY)+80
					OnScrollCount(ID_CATEGORY)=0
				}
				if WheelVal(ID_CATEGORY)<0 { //ー
					ScrollEaseA(ID_CATEGORY)=ScrollEaseB(ID_CATEGORY)
					ScrollEaseB(ID_CATEGORY)-80
					OnScrollCount(ID_CATEGORY)=0
				}
				if ScrollEaseB(ID_CATEGORY)>0 :ScrollEaseB(ID_CATEGORY)=0
				if (10*2+(8+50)*NUM_ITEM_CATEGORY)-811>0 {
					if ScrollEaseB(ID_CATEGORY)<-((10*2+(8+50)*NUM_ITEM_CATEGORY)-811) :ScrollEaseB(ID_CATEGORY)=-((10*2+(8+50)*14)-811)
				}
				AddCount OnScrollCount(ID_CATEGORY)
				//アイテム描画
				repeat NUM_ITEM_CATEGORY
					setease ScrollEaseA(ID_CATEGORY),ScrollEaseB(ID_CATEGORY),ease_cubic_out
					dim itemposy:itemposy=10+cnt*(50+8)+getease(OnScrollCount(ID_CATEGORY),10)
					//項目
						SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
						DrawGraph 25,itemposy,hdximg(ifolder_all+cnt),TRUE
					//ホバーエフェクト
						if HoverColumnID(ID_CATEGORY)==cnt {
							setease 0,100,ease_linear+ease_loop
							SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,getease(SceneCount,20)
							DrawGraph 21,itemposy-4,hdximg(icursor_category),TRUE
						}
					//アクティブエフェクト
						if ActiveColumnID(ID_CATEGORY)==cnt {
							SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
							DrawGraph 21,itemposy-4,hdximg(icursor_category),TRUE
						}
				loop
			SetDrawScreen hdximg(ilayer_all)
			SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
			DrawGraph 0,229,hdximg(iwindow_category),TRUE

		//曲選択ウィンドウ
			SetDrawScreen hdximg(iwindow_songs)
			ClearDrawScreen
				if insquare(CursorPosX,CursorPosY,450,229,450+700,229+811) {
					WheelVal(ID_SONGS)=RawWheelMove
					RawWheelMove=0
				}
				if WheelVal(ID_SONGS)>0 { //＋
					ScrollEaseA(ID_SONGS)=ScrollEaseB(ID_SONGS)
					ScrollEaseB(ID_SONGS)+80
					OnScrollCount(ID_SONGS)=0
				}
				if WheelVal(ID_SONGS)<0 { //ー
					ScrollEaseA(ID_SONGS)=ScrollEaseB(ID_SONGS)
					ScrollEaseB(ID_SONGS)-80
					OnScrollCount(ID_SONGS)=0
				}
				if ScrollEaseB(ID_SONGS)>0 :ScrollEaseB(ID_SONGS)=0
				if (10*2+(8+50)*numfilteritem)-811>0 {
					if ScrollEaseB(ID_SONGS)<-((10*2+(8+50)*numfilteritem)-811) :ScrollEaseB(ID_SONGS)=-((10*2+(8+50)*numfilteritem)-811)
				} else :ScrollEaseB(ID_SONGS)=0
				AddCount OnScrollCount(ID_SONGS)
				//アイテム描画
				repeat numfilteritem
					setease ScrollEaseA(ID_SONGS),ScrollEaseB(ID_SONGS),ease_cubic_out
					dim itemposy:itemposy=10+cnt*(50+8)+getease(OnScrollCount(ID_SONGS),10)
					if itemposy<-50 :continue
					if itemposy>BufHeight@:continue
					//項目
						SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
						if plitem_unlockflag(c(cnt,CurSelLev),lv(cnt,CurSelLev))==FALSE {
							SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,150
						}
						DrawGraph 15,itemposy,hdximg(ibg_item),TRUE
						switch lv(cnt,CurSelLev)
							case 0:DrawGraph 15+564,itemposy+38,hdximg(iIcon_item_normal),TRUE:swbreak
							case 1:DrawGraph 15+564,itemposy+38,hdximg(iIcon_item_hard),TRUE:swbreak
							case 2:DrawGraph 15+564,itemposy+38,hdximg(iIcon_item_chaos),TRUE:swbreak
						swend

						//バッジ
						plitemid=cnt
						repeat 3
							if ActiveColumnID(ID_CATEGORY)!0&cnt!lv(plitemid,CurSelLev) :continue
							pllevid=cnt
							switch plitem_mybest_cleartype(c(plitemid,pllevid),lv(plitemid,pllevid))
								case"ASSIST-CLEAR":DrawGraph 539+28*pllevid,itemposy+15,hdximg(ibadge_assist),TRUE:swbreak
								case"CLEAR":DrawGraph 539+28*pllevid,itemposy+15,hdximg(ibadge_clear),TRUE:swbreak
								case"EXPERT-CLEAR":DrawGraph 539+28*pllevid,itemposy+15,hdximg(ibadge_expert),TRUE:swbreak
								case"MADNESS-CLEAR":DrawGraph 539+28*pllevid,itemposy+15,hdximg(ibadge_madness),TRUE:swbreak
								case"FULLCOMBO":DrawGraph 539+28*pllevid,itemposy+15,hdximg(ibadge_fc),TRUE:swbreak
								case"ALL-EXCELLENT":DrawGraph 539+28*pllevid,itemposy+15,hdximg(ibadge_allex),TRUE:swbreak
								case"FAILED":DrawGraph 539+28*pllevid,itemposy+15,hdximg(ibadge_failed),TRUE:swbreak
							swend
						loop

						//曲名
						SetDrawBlendMode DX_BLENDMODE_ALPHA,256
						DrawStringToHandle 47,itemposy+11,plitem_Title(c(cnt,0),0),GetColor(10,10,10),hdxfont(fNSCJM24)

					//ホバーエフェクト
						if HoverColumnID(ID_SONGS)==cnt {
							setease 0,100,ease_linear+ease_loop
							SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,getease(SceneCount,20)
							DrawGraph 11,itemposy-4,hdximg(icursor_list),TRUE
						}
					//アクティブエフェクト
						if ActiveColumnID(ID_SONGS)==cnt {
							SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
							DrawGraph 11,itemposy-4,hdximg(icursor_list),TRUE
						}
				loop
			SetDrawScreen hdximg(ilayer_all)
			setease 100,256,ease_cubic_out
			SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,getease(CatChangeCount,20)
			setease 64,0,ease_cubic_out
			DrawGraph 450+getease(CatChangeCount,20),229,hdximg(iwindow_songs),TRUE

		//メタデータ
			SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
			DrawGraph 1170,189,hdximg(ibg_meta),TRUE
			SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
			//曲名
			DrawStringToHandle 1492,231,plitem_Title(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev)),GetColor(10,10,10),hdxfont(fNSCJM24)
			//アーティスト名
			DrawStringToHandle 1492,283,plitem_Artist(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev)),GetColor(30,30,30),hdxfont(fNSCJM20)
			//アルバム
			DrawStringToHandle 1492,333,plitem_Source(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev)),GetColor(50,50,50),hdxfont(fNSCJM16)
			//アルバムアート
			if numfilteritem!0 {
				setease 250,200,ease_cubic_out
				EaseWidth=getease(SongChangeCount,30)
				DrawPosX=1170+200/2-EaseWidth/2:DrawPosY=189+200/2-EaseWidth/2
				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
				;SetDrawMode DX_DRAWMODE_BILINEAR
				if plitem_unlockflag(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev)) {
					DrawExtendGraph DrawPosX,DrawPosY,DrawPosX+EaseWidth,DrawPosY+EaseWidth,plitem_artwork(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev)),FALSE
				} else {
					DrawExtendGraph DrawPosX,DrawPosY,DrawPosX+EaseWidth,DrawPosY+EaseWidth,hdximg(iIcon_Artwork_Locked),FALSE
				}
				
			}

		//詳細
			SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
			DrawGraph 1150,425,hdximg(ibg_detail),TRUE
			SetDrawBlendMode DX_BLENDMODE_ALPHA,256
			//自己ベストスコア
			setease 0,plitem_mybest_score(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev)),ease_linear
			DrawStringToHandle 1173,536,strf("%08d",getease(SongChangeCount,15)),GetColor(255,255,255),hdxfont(fPS16)
			//獲得スコアランク
			DrawStringToHandle 1273,536,plitem_mybest_rank(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev)),GetColor(255,255,255),hdxfont(fPS16)
			//スコアレート（％）
			DrawStringToHandle 1333,536,plitem_mybest_rate(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev)),GetColor(255,255,255),hdxfont(fPS16)
			//クリアの種類
			DrawStringToHandle 1398,536,plitem_mybest_cleartype(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev)),GetColor(255,255,255),hdxfont(fPS16)
			//EXCELLENT判定数
			setease 0,plitem_mybest_judge(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev),ID_DATA_EXCELLENT),ease_cubic_out
			DrawStringToHandle 1269,585,strf("%04d",getease(SongChangeCount,20)),GetColor(255,255,255),hdxfont(fPS16)
			//GREAT判定数
			setease 0,plitem_mybest_judge(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev),ID_DATA_GREAT),ease_cubic_out
			DrawStringToHandle 1269,604,strf("%04d",getease(SongChangeCount,22)),GetColor(255,255,255),hdxfont(fPS16)
			//GOOD判定数
			setease 0,plitem_mybest_judge(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev),ID_DATA_GOOD),ease_cubic_out
			DrawStringToHandle 1269,623,strf("%04d",getease(SongChangeCount,24)),GetColor(255,255,255),hdxfont(fPS16)
			//BAD判定数
			setease 0,plitem_mybest_judge(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev),ID_DATA_BAD),ease_cubic_out
			DrawStringToHandle 1269,642,strf("%04d",getease(SongChangeCount,26)),GetColor(255,255,255),hdxfont(fPS16)
			//MISS判定数
			setease 0,plitem_mybest_judge(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev),ID_DATA_MISS),ease_cubic_out
			DrawStringToHandle 1269,661,strf("%04d",getease(SongChangeCount,28)),GetColor(255,255,255),hdxfont(fPS16)
			//EARLY判定数
			setease 0,plitem_mybest_judge(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev),ID_DATA_EARLY),ease_cubic_out
			DrawStringToHandle 1398,585,strf("%04d",getease(SongChangeCount,20)),GetColor(255,255,255),hdxfont(fPS16)
			//LATE判定数
			setease 0,plitem_mybest_judge(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev),ID_DATA_LATE),ease_cubic_out
			DrawStringToHandle 1398,604,strf("%04d",getease(SongChangeCount,24)),GetColor(255,255,255),hdxfont(fPS16)
			//EARLY/LATE比
			DrawStringToHandle 1398,625,plitem_mybest_ratio(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev)),GetColor(255,255,255),hdxfont(fPS16)
			//能力値
			DrawStringToHandle 1333,663,strf("%.2f",plitem_pfpoint(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))),Getcolor(255,255,255),hdxfont(fPS16)
			//ゲージのグラフ
			if peek(plitem_mybest_gauge(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev)),0)==255 {		//ゲージ記録なし
				setease 100,256,ease_linear+ease_loop
				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,getease(SceneCount,60)
				DrawGraph 1170,706,hdximg(ilayer_nodata),TRUE
			} else {
				setease 0,350-1,ease_cubic_out
				repeat getease(SongChangeCount,60)		//グラフ描画
					dim GraphColorCode:dim GraphDrawValue
					GraphDrawValue(0)=int(double(peek(plitem_mybest_gauge(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev)),cnt))*0.8)
					GraphDrawValue(1)=int(double(peek(plitem_mybest_gauge(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev)),cnt+1))*0.8)

					GraphColorCode=GetColor(255,255,255)
					if plitem_mybest_cleartype(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))=="ASSIST-CLEAR"|plitem_mybest_cleartype(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))=="CLEAR" {		//加点式
						if GraphDrawValue(0)>70.0 :GraphColorCode=GetColor(100,255,100):else:GraphColorCode=GetColor(255,50,50)
					}
					if plitem_mybest_cleartype(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))=="EXPERT-CLEAR" :GraphColorCode=GetColor(255,50,80)	//EXPERTゲージ
					if plitem_mybest_cleartype(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))=="MADNESS-CLEAR" :GraphColorCode=GetColor(132,60,160) //MADNESSゲージ

					DrawLine 1170+cnt,706+80-GraphDrawValue(0),1170+1+cnt,706+80-GraphDrawValue(1),GraphColorCode,2
				loop
			}

		//トレーナー
			ddim TrainerRate,1:sdim tmpstr:dim tmpint
			switch CurSelLev
				case 0:tmpstr="Normal":swbreak
				case 1:tmpstr="Hard":swbreak
				case 2:tmpstr="Chaos":swbreak
			swend
			tmpint=plitem_totalnotes(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))
			MaxPfPoint=GetPfPoint(int(plitem_Level(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))),10000000,tmpint,tmpstr,0)
			TrainerRate=limitf(double(plitem_pfpoint(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev)))/MaxPfPoint*100.0+5.0,0.0,100.0)
			SetDrawBlendMode DX_BLENDMODE_ALPHA,256
			setease 0,499,ease_cubic_in
			DrawStringToHandle 1370,967,"適正レベル Lv."+(1+getease(int(TrainerRate*10.0),1000)),GetColor(255,255,255),hdxfont(fNSCJM16)
			DrawStringToHandle 1370,991,"レート : "+strf("%.2f",(TrainerRate))+"%",Getcolor(255,255,255),hdxfont(fNSCJM15)

		//世界ランキング
			SetDrawScreen hdximg(iwindow_ranking)
			ClearDrawScreen
				if insquare(CursorPosX,CursorPosY,1560,522,1560+350,522+210) {
					WheelVal(ID_RANKING)=RawWheelMove
					RawWheelMove=0
				}
				if WheelVal(ID_RANKING)>0 { //＋
					ScrollEaseA(ID_RANKING)=ScrollEaseB(ID_RANKING)
					ScrollEaseB(ID_RANKING)+80
					OnScrollCount(ID_RANKING)=0
				}
				if WheelVal(ID_RANKING)<0 { //ー
					ScrollEaseA(ID_RANKING)=ScrollEaseB(ID_RANKING)
					ScrollEaseB(ID_RANKING)-80
					OnScrollCount(ID_RANKING)=0
				}
				if ScrollEaseB(ID_RANKING)>0 :ScrollEaseB(ID_RANKING)=0
				if ScrollEaseB(ID_RANKING)<-(21*100)+21*10 :ScrollEaseB(ID_RANKING)=-(21*100)+21*10
				AddCount OnScrollCount(ID_RANKING)
				//アイテム描画
				sdim numstr:numstr="st","nd","rd","th","th","th","th","th","th","th"
				repeat 100
					setease ScrollEaseA(ID_RANKING),ScrollEaseB(ID_RANKING),ease_cubic_out
					dim itemposy:itemposy=21*cnt+getease(OnScrollCount(ID_RANKING),10)
					if itemposy<-21 :continue
					if itemposy>210:continue
					dim hDrawIcon
					switch cnt
						case 0:hDrawIcon=hdximg(iIcon_Rank_1):swbreak
						case 1:hDrawIcon=hdximg(iIcon_Rank_2):swbreak
						case 2:hDrawIcon=hdximg(iIcon_Rank_3):swbreak
						default:hDrawIcon=hdximg(iIcon_rank_def):swbreak
					swend
					if plitem_ir_name(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev),cnt)=="" :plitem_ir_name(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev),cnt)="----"
					SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
					DrawGraph 0,itemposy,hDrawIcon,TRUE
					SetDrawBlendMode DX_BLENDMODE_ALPHA,256
					DrawStringToHandle 26,itemposy+2,""+(cnt+1)+numstr(cnt\10),GetColor(255,255,255),hdxfont(fSQNUM16)
					DrawStringToHandle 110,itemposy,plitem_ir_name(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev),cnt),GetColor(255,255,255),hdxfont(fPS16)
					DrawStringToHandle 230,itemposy,strf("%08d",plitem_ir_score(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev),cnt)),GetColor(255,255,255),hdxfont(fPS16)
				loop
			SetDrawScreen hdximg(ilayer_all)
			setease 100,256,ease_cubic_out
			SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,getease(SongChangeCount,20)
			setease 64,0,ease_cubic_out
			DrawGraph 1560+getease(SongChangeCount,20),522,hdximg(iwindow_ranking),TRUE

		//自分の順位
			SetDrawBlendMode DX_BLENDMODE_ALPHA,256
			if plitem_ir_myrank(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))!-1 {
				DrawStringToHandle 1560,761,str(plitem_ir_myrank(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))+1)+" / "+str(plitem_ir_maxrank(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))),GetColor(255,255,255),hdxfont(fSQNUM16)
			} else {
				DrawStringToHandle 1560,761,"NO DATA",GetColor(255,255,255),hdxfont(fSQNUM16)
			}

		//難易度表記
			dim tmpint:dim DrawPosX
			if ActiveColumnID(ID_CATEGORY)==0 {
				tmpint=3
				DrawPosX=1420
			} else {
				tmpint=1
				DrawPosX=1420
			}
			repeat tmpint
				dim NumDrawStars:NumDrawStars=plitem_Level(c(ActiveColumnID(ID_SONGS),cnt),lv(ActiveColumnID(ID_SONGS),cnt))
				dim hDrawStar
				pllevid=cnt
				setease 0,limit(NumDrawStars,0,4*3),ease_cubic_out
				repeat getease(SongChangeCount-5*pllevid,15)
					setease 100,256,ease_cubic_out
					SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,getease(SongChangeCount-5*pllevid-cnt,15)
					hDrawStar=hdximg(iIcon_difficulty_star_0)
					if cnt>=4 :hDrawStar=hdximg(iIcon_difficulty_star_1)
					if cnt>=8 :hDrawStar=hdximg(iIcon_difficulty_star_2)
					DrawGraph DrawPosX+20*cnt,834+40*pllevid,hDrawStar,TRUE
				loop
			loop

		//プレイヤー情報
			SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
			DrawGraph 1170,41,hdximg(ibg_playerinfo),TRUE
			DrawExtendGraph 1170,40,1170+125,40+100,hCharImg@charicon(RegCharID@portalsync),TRUE
				SetDrawBlendMode DX_BLENDMODE_ALPHA,256
				//名前
				DrawStringToHandle 1315,54,RegName@portalsync,Getcolor(0,0,0),hdxfont(fPS24)
				//レベル
				DrawStringToHandle 1315,86,"Lv. "+RegLev@portalsync,Getcolor(0,0,0),hdxfont(fPS16)
				//総合能力値
				DrawStringToHandle 1397,109,strf("%.2f",RegPfPoint@portalsync),Getcolor(0,0,0),hdxfont(fPS16)
				//経験値
				DrawStringToHandle 1450,86,"EXP "+RegEXP@portalsync+" / "+lpeek(expTablebuf@,RegLev@portalsync*4),Getcolor(0,0,0),hdxfont(fPS16)
				DrawBox 1450,109,1450+int(100.0*(double(RegEXP@portalsync)/double(lpeek(expTablebuf@,RegLev@portalsync*4)))),109+8,$3FECF2,TRUE

			//コメント
			if insquare(CursorPosX,CursorPosY,1635,57,1635+140,57+30)&OptionWindowFlag==0 {
				DrawGraph 1635,57,hdximg(ilayer_playerinfo_button),TRUE
				if (MouseInput&MOUSE_INPUT_LEFT) {
					OpenEditCommentDialog
					SetDrawScreen hdximg(ilayer_all)
				}
			}
			//パートナー
			if insquare(CursorPosX,CursorPosY,1635,95,1635+140,95+30)&OptionWindowFlag==0 {
				DrawGraph 1635,95,hdximg(ilayer_playerinfo_button),TRUE
				if (MouseInput&MOUSE_INPUT_LEFT)&DecideCount==-1 {
					PushButtonFlag=TRUE
					PlaySE int(hbasschannel(sndDecide)),1.0
					DecideCount=0
					SceneTransID=ID_TRANS_PARTNERSELECT
				}
			}

		//ボタンの描画と判定
		if OptionWindowFlag==0|OptionWindowFlag==2 {
			//プレイ開始ボタン
				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
				if plitem_unlockflag(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))==TRUE {
					if insquare(CursorPosX,CursorPosY,1620,960,1620+280,960+64) {
						if (MouseInput&MOUSE_INPUT_LEFT)&DecideCount==-1 {
							DrawGraph 1620,960,hdximg(ibutton_start_2),TRUE
							PushButtonFlag=TRUE
							PlaySE int(hbasschannel(sndDecide)),1.0
							PlayMovieToGraph hdximg(ibg_Load),DX_PLAYTYPE_LOOP
							DecideCount=0
							SceneTransID=ID_TRANS_PLAY
						} else {
							DrawGraph 1620,960,hdximg(ibutton_start_1),TRUE
						}
					} else {
						DrawGraph 1620,960,hdximg(ibutton_start_0),TRUE
					}
				}

			//オプション
				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
				if insquare(CursorPosX,CursorPosY,1720,850,1720+180,850+40) {
					if (MouseInput&MOUSE_INPUT_LEFT)&DecideCount==-1 {
						DrawGraph 1720,850,hdximg(ibutton_option_2),TRUE
						PushButtonFlag=TRUE
						PlaySE int(hbasschannel(sndDecide)),1.0
						OptionWindowFlag=1:OptionWindowCount=0
						if WatchTutorial_Option@==FALSE {
							TutorialWindowID=3:TutorialWindowCount=0
						}
					} else {
						DrawGraph 1720,850,hdximg(ibutton_option_1),TRUE
					}
				} else {
					DrawGraph 1720,850,hdximg(ibutton_option_0),TRUE
				}

			//難易度変更ボタン
				if ActiveColumnID(ID_CATEGORY)==0 {	//すべての楽曲のときのみ
					if plitem_UUID(c(ActiveColumnID(ID_SONGS),0),0)!"*" {
						if CurSelLev==0 {	//normal
							DrawGraph 1254,826,hdximg(ibutton_normal_2),TRUE
						} else {
							if insquare(CursorPosX,CursorPosY,1254,826,1254+150,826+32) {
								if MouseInput&MOUSE_INPUT_LEFT :CurSelLev=0:PushButtonFlag=TRUE
								DrawGraph 1254,826,hdximg(ibutton_normal_1),TRUE
							} else {
								DrawGraph 1254,826,hdximg(ibutton_normal_0),TRUE
							}
						}
					}
					if plitem_UUID(c(ActiveColumnID(ID_SONGS),1),1)!"*" {
						if CurSelLev==1 {	//hard
							DrawGraph 1254,866,hdximg(ibutton_hard_2),TRUE
						} else {
							if insquare(CursorPosX,CursorPosY,1254,866,1254+150,866+32) {
								if MouseInput&MOUSE_INPUT_LEFT :CurSelLev=1:PushButtonFlag=TRUE
								DrawGraph 1254,866,hdximg(ibutton_hard_1),TRUE
							} else {
								DrawGraph 1254,866,hdximg(ibutton_hard_0),TRUE
							}
						}
					}
					if plitem_UUID(c(ActiveColumnID(ID_SONGS),2),2)!"*" {
						if CurSelLev==2 {	//chaos
							DrawGraph 1254,906,hdximg(ibutton_chaos_2),TRUE
						} else {
							if insquare(CursorPosX,CursorPosY,1254,906,1254+150,906+32) {
								if MouseInput&MOUSE_INPUT_LEFT :CurSelLev=2:PushButtonFlag=TRUE
								DrawGraph 1254,906,hdximg(ibutton_chaos_1),TRUE
							} else {
								DrawGraph 1254,906,hdximg(ibutton_chaos_0),TRUE
							}
						}
					}
				} else {
					switch lv(ActiveColumnID(ID_SONGS),CurSelLev)
					case 0:DrawGraph 1254,826,hdximg(ibutton_normal_1),TRUE:swbreak
					case 1:DrawGraph 1254,826,hdximg(ibutton_hard_1),TRUE:swbreak
					case 2:DrawGraph 1254,826,hdximg(ibutton_chaos_1),TRUE:swbreak
					swend
				}
		}
		//オプションウィンドウのボタン判定
		if OptionWindowFlag==1 {
			//閉じるボタン
			if insquare(CursorPosX,CursorPosY,1828,4,1828+64,4+64)&(MouseInput&MOUSE_INPUT_LEFT) {
				OptionWindowFlag=2:OptionWindowCount=0
				PlaySE int(hbasschannel(sndCancel)),1.0
			}
			//流れてくる音符の速さ
				if insquare(CursorPosX,CursorPosY,1617,120,1617+50,120+32) {
					if (MouseInput&MOUSE_INPUT_LEFT)&(bfMouseInput&MOUSE_INPUT_LEFT)==FALSE :AddSpeed@-0.1:PlaySE int(hbasschannel(sndCursor)),1.0
					if LClickKeepCount>30&SceneCount\5==0 :AddSpeed@-0.1
				}
				if insquare(CursorPosX,CursorPosY,1817,120,1817+50,120+32) {
					if (MouseInput&MOUSE_INPUT_LEFT)&(bfMouseInput&MOUSE_INPUT_LEFT)==FALSE :AddSpeed@+0.1:PlaySE int(hbasschannel(sndCursor)),1.0
					if LClickKeepCount>30&SceneCount\5==0 :AddSpeed@+0.1
				}
			//ゲージの難易度
				if insquare(CursorPosX,CursorPosY,1617,192,1617+50,192+32)&(MouseInput&MOUSE_INPUT_LEFT)&(bfMouseInput&MOUSE_INPUT_LEFT)==FALSE {
					GaugeType@--
					if GaugeType@<GAUGE_ASSIST :GaugeType@=GAUGE_MADNESS
					PlaySE int(hbasschannel(sndCursor)),1.0
				}
				if insquare(CursorPosX,CursorPosY,1817,192,1817+50,192+32)&(MouseInput&MOUSE_INPUT_LEFT)&(bfMouseInput&MOUSE_INPUT_LEFT)==FALSE {
					GaugeType@++
					if GaugeType@>GAUGE_MADNESS :GaugeType@=GAUGE_ASSIST
					PlaySE int(hbasschannel(sndCursor)),1.0
				}
			//譜面の配置
				if insquare(CursorPosX,CursorPosY,1617,264,1617+50,264+32)&(MouseInput&MOUSE_INPUT_LEFT)&(bfMouseInput&MOUSE_INPUT_LEFT)==FALSE {
					ObjPlacement@--
					if ObjPlacement@<OBJP_NORMAL :ObjPlacement@=OBJP_S_AUTO
					PlaySE int(hbasschannel(sndCursor)),1.0
				}
				if insquare(CursorPosX,CursorPosY,1817,264,1817+50,264+32)&(MouseInput&MOUSE_INPUT_LEFT)&(bfMouseInput&MOUSE_INPUT_LEFT)==FALSE {
					ObjPlacement@++
					if ObjPlacement@>OBJP_S_AUTO :ObjPlacement@=OBJP_NORMAL
					PlaySE int(hbasschannel(sndCursor)),1.0
				}
			//目標スコア
				if insquare(CursorPosX,CursorPosY,1617,336,1617+50,336+32)&(MouseInput&MOUSE_INPUT_LEFT)&(bfMouseInput&MOUSE_INPUT_LEFT)==FALSE {
					TargetScoreRank@--
					if TargetScoreRank@<TARGET_SCORE_MAX :TargetScoreRank@=TARGET_SCORE_ONLINETOP
					PlaySE int(hbasschannel(sndCursor)),1.0
				}
				if insquare(CursorPosX,CursorPosY,1817,336,1817+50,336+32)&(MouseInput&MOUSE_INPUT_LEFT)&(bfMouseInput&MOUSE_INPUT_LEFT)==FALSE {
					TargetScoreRank@++
					if TargetScoreRank@>TARGET_SCORE_ONLINETOP :TargetScoreRank@=TARGET_SCORE_MAX
					PlaySE int(hbasschannel(sndCursor)),1.0
				}
			//判定タイミングの調整
				if insquare(CursorPosX,CursorPosY,1617,408,1617+50,408+32) {
					if (MouseInput&MOUSE_INPUT_LEFT)&(bfMouseInput&MOUSE_INPUT_LEFT)==FALSE :JudgeOffset@-1:PlaySE int(hbasschannel(sndCursor)),1.0
					if LClickKeepCount>30&SceneCount\5==0 :JudgeOffset@-1
				}
				if insquare(CursorPosX,CursorPosY,1817,408,1817+50,408+32) {
					if (MouseInput&MOUSE_INPUT_LEFT)&(bfMouseInput&MOUSE_INPUT_LEFT)==FALSE :JudgeOffset@+1:PlaySE int(hbasschannel(sndCursor)),1.0
					if LClickKeepCount>30&SceneCount\5==0 :JudgeOffset@+1
				}
			//描画位置の調整
				if insquare(CursorPosX,CursorPosY,1617,480,1617+50,480+32) {
					if (MouseInput&MOUSE_INPUT_LEFT)&(bfMouseInput&MOUSE_INPUT_LEFT)==FALSE :DispOffset@-1:PlaySE int(hbasschannel(sndCursor)),1.0
					if LClickKeepCount>30&SceneCount\5==0 :DispOffset@-1
				}
				if insquare(CursorPosX,CursorPosY,1817,480,1817+50,480+32) {
					if (MouseInput&MOUSE_INPUT_LEFT)&(bfMouseInput&MOUSE_INPUT_LEFT)==FALSE :DispOffset@+1:PlaySE int(hbasschannel(sndCursor)),1.0
					if LClickKeepCount>30&SceneCount\5==0 :DispOffset@+1
				}
			//キーの割り当て
				if insquare(CursorPosX,CursorPosY,1765,552,1765+100,552+32)&(MouseInput&MOUSE_INPUT_LEFT)&(bfMouseInput&MOUSE_INPUT_LEFT)==FALSE {
					JumpSceneFlag=TRUE
					JumpSceneCount=0
					JumpSceneID=ID_KEYCONFIG
					PlaySE int(hbasschannel(sndCursor)),1.0
				}
			//ボーナスの表示
				if insquare(CursorPosX,CursorPosY,1801,624,1801+64,624+32)&(MouseInput&MOUSE_INPUT_LEFT)&(bfMouseInput&MOUSE_INPUT_LEFT)==FALSE {
					if drawbonusFlag@ :drawbonusFlag@=FALSE:else:drawbonusFlag@=TRUE
					PlaySE int(hbasschannel(sndCursor)),1.0
				}
			//オートプレイ
				if insquare(CursorPosX,CursorPosY,1801,696,1801+64,696+32)&(MouseInput&MOUSE_INPUT_LEFT)&(bfMouseInput&MOUSE_INPUT_LEFT)==FALSE {
					if AutoPlayFlag@ :AutoPlayFlag@=FALSE:else:AutoPlayFlag@=TRUE
					PlaySE int(hbasschannel(sndCursor)),1.0
				}

			//設定値の制限
				AddSpeed@=limitf(AddSpeed@,0.1,10.0)
		}

		//アンロックダイアログ
		if plitem_unlockflag(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))==FALSE {
			setease 256,256,ease_cubic_out
			SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,getease(SongChangeCount,15)
			setease 0,1,ease_cubic_out
			EaseWidth=int(580.0*geteasef(SongChangeCount,20))
			EaseHeight=int(256.0*geteasef(SongChangeCount,20))
			EasePosX=1230+580/2-EaseWidth/2
			EasePosY=507+256/2-EaseHeight/2
			DrawExtendGraph EasePosX,EasePosY,EasePosX+EaseWidth,EasePosY+EaseHeight,hdximg(ilocked_window),TRUE

			//条件
			setease 0,256,ease_linear
			EaseAlpha=getease(SongChangeCount-10,10)
			SetDrawBlendMode DX_BLENDMODE_ALPHA,EaseAlpha
			if SongChangeCount>10 {
				if plitem_unlocklilly(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))==0 {
					DrawStringXCenterToHandle 1230,636,"指定されたミッションを達成する。",580,$8EFFE4,hdxfont(fNSCJM16)
				} else {
					DrawStringXCenterToHandle 1230,636,""+plitem_unlocklilly(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))+" Lillyを消費する。",580,$8EFFE4,hdxfont(fNSCJM16)
					SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,EaseAlpha
					DrawGraph 1420,680,hdximg(ibutton_lilly),TRUE
					if insquare(CursorPosX,CursorPosY,1420,680,1420+200,680+40) {
						DrawGraph 1420,680,hdximg(ibutton_lilly_hover),TRUE
						if (MouseInput&MOUSE_INPUT_LEFT)&(bfMouseInput&MOUSE_INPUT_LEFT)==FALSE&UnlockDialogID==0 {
							if NumLilly@portalsync<plitem_unlocklilly(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev)) {
								UnlockDialogID=-1:UnlockDialogCount=0
								PlaySE int(hcommonsech@(sndError@)),0.9
							} else {
								PlaySE int(hcommonsech@(sndDecide@)),0.9
								PlaySE int(hcommonsech@(vocBuy@)),1.0
								NumLilly@portalsync-plitem_unlocklilly(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))
								librec_conslilly@+plitem_unlocklilly(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))
								plitem_unlockflag(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))=TRUE
								RegChartUnlockFlag plitem_UUID(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev)),TRUE
								SongChangeCount=0
							}
						}
					}
				}
			}
		}
		if (UnlockDialogID==-1|UnlockDialogID==-2)&UnlockDialogCount>1 {
			if UnlockDialogID==-1 {
				setease 150,256,ease_cubic_out
				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,getease(UnlockDialogCount,15)
				setease 0.5,1,ease_cubic_out
			} else {
				setease 256,0,ease_cubic_out
				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,getease(UnlockDialogCount,15)
				setease 1,0,ease_cubic_out
			}
			EaseWidth=int(580.0*geteasef(UnlockDialogCount,20))
			EaseHeight=int(256.0*geteasef(UnlockDialogCount,20))
			EasePosX=1230+580/2-EaseWidth/2
			EasePosY=507+256/2-EaseHeight/2
			DrawExtendGraph EasePosX,EasePosY,EasePosX+EaseWidth,EasePosY+EaseHeight,hdximg(ilillyerror_window),TRUE

			if UnlockDialogID==-1 {
				setease 0,256,ease_linear
				EaseAlpha=getease(UnlockDialogCount-10,10)
			} else {
				EaseAlpha=0
			}
			SetDrawBlendMode DX_BLENDMODE_ALPHA,EaseAlpha
			if UnlockDialogCount>10 {
				DrawStringToHandle 1540,640,str(plitem_unlocklilly(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))-NumLilly@portalsync)+" Lilly",$FF8EBB,hdxfont(fPS16)
			}
			if insquare(CursorPosX,CursorPosY,1420,680,1420+200,680+40)&UnlockDialogCount>20&UnlockDialogID==-1 {
				DrawGraph 1420,680,hdximg(ibutton_lilly_hover),TRUE
				if (MouseInput&MOUSE_INPUT_LEFT)&(bfMouseInput&MOUSE_INPUT_LEFT)==FALSE {
					PlaySE int(hcommonsech@(sndDecide@)),0.9
					UnlockDialogCount=0:UnlockDialogID=-2
				}
			}
			if UnlockDialogID==-2&UnlockDialogCount>20 :UnlockDialogID=0
		}
		AddCount UnlockDialogCount

		if PushButtonFlag==TRUE&(MouseInput&MOUSE_INPUT_LEFT)==TRUE&(bfMouseInput&MOUSE_INPUT_LEFT)==FALSE {
			PlaySE int(hbasschannel(sndCursor)),1.0
		}

		//-----以下、共有レイヤー-----
		SetDrawScreen hdximg@(iScene)

		if DecideCount!-1 {
			setease 1,1.2,ease_cubic_out
			dim EasePosX:dim EasePosY:dim EaseWidth:dim EaseHeight
			EaseWidth=int(double(BufWidth@)*geteasef(DecideCount+1,20))
			EaseHeight=int(double(BufHeight@)*geteasef(DecideCount+1,20))
			EasePosX=BufWidth@/2-EaseWidth/2:EasePosY=BufHeight@/2-EaseHeight/2
			setease 256,0,ease_cubic_out
			SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,getease(DecideCount+1,20)
		} else {
			setease 1.2,1,ease_cubic_out
			dim EasePosX:dim EasePosY:dim EaseWidth:dim EaseHeight
			EaseWidth=int(double(BufWidth@)*geteasef(SceneCount,20))
			EaseHeight=int(double(BufHeight@)*geteasef(SceneCount,20))
			EasePosX=BufWidth@/2-EaseWidth/2:EasePosY=BufHeight@/2-EaseHeight/2
			setease 0,256,ease_cubic_out
			SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,getease(SceneCount,20)
		}
		DrawExtendGraph EasePosX,EasePosY,EasePosX+EaseWidth,EasePosY+EaseHeight,hdximg(ilayer_all),TRUE

		//ステータス
		DrawDefaultStatus"",hdxfont(fPS16),TRUE,CursorPosX,CursorPosY

		//戻るボタン
			//ホバーエフェクト
			if BackButtonHoverFlag==FALSE&insquare(CursorPosX,CursorPosY,0,1000,240,1080)==TRUE {
				BackButtonEase=-1
			}
			if BackButtonHoverFlag==TRUE&insquare(CursorPosX,CursorPosY,0,1000,240,1080)==FALSE {
				BackButtonEase=1
			}
			if BackButtonEase<0 :BackButtonEase--
			if BackButtonEase>0 :BackButtonEase++

			//拡大縮小
			if BackButtonEase>0 {
				setease 1.2,1,ease_cubic_out
			} else {
				setease 1,1.2,ease_cubic_out
			}
			EaseWidth=int(240.0*geteasef(abs(BackButtonEase),10))
			EaseHeight=int(80.0*geteasef(abs(BackButtonEase),10))
			EasePosX=0:EasePosY=BufHeight@-EaseHeight

			//フェードイン・フェードアウト
			if SceneCount<20 {
				setease -int(240.0*1.2),0,ease_cubic_out
				EasePosX=getease(SceneCount,20)
			}
			if SceneTransID==ID_TRANS_BACKSCENE {
				setease 0,-int(240.0*1.2),ease_cubic_out
				EasePosX=getease(DecideCount,20)
			}

			//描画
			DrawExtendGraph EasePosX,EasePosY,EasePosX+EaseWidth,EasePosY+EaseHeight,hdximg@(ibutton_backscene),TRUE

		BackButtonHoverFlag=insquare(CursorPosX,CursorPosY,0,1000,240,1080)

		//プリローダー
		if DecideCount==-1 {
			setease 400,0,ease_cubic_out
			EaseWidth=getease(SceneCount-20,20)
		} else {
			setease 0,400,ease_cubic_out
			EaseWidth=getease(DecideCount,20)
		}
		DrawExtendGraph BufWidth@/2-EaseWidth/2,BufHeight@/2-EaseWidth/2,BufWidth@/2+EaseWidth/2,BufHeight@/2+EaseWidth/2,hdximg_arr_preloader_2@(FrameCount@\74),TRUE

		//NEXT STAGE
		if SceneTransID==ID_TRANS_PLAY {
			//背景（動画）
			setease 0,256,ease_cubic_out
			SetDrawBlendMode DX_BLENDMODE_ALPHA,getease(DecideCount-15,40)
			setease 1.1,1,ease_cubic_out
			EaseWidth=int(double(BufWidth@)*geteasef(DecideCount-15,40))
			EaseHeight=int(double(BufHeight@)*geteasef(DecideCount-15,40))
			EasePosX=BufWidth@/2-EaseWidth/2:EasePosY=BufHeight@/2-EaseHeight/2
			DrawExtendGraph EasePosX,EasePosY,EasePosX+EaseWidth,EasePosY+EaseHeight,hdximg(ibg_Load),TRUE

			if DecideCount>10 {
				//背景
				setease 0,256,ease_cubic_out
				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,getease(DecideCount-20,15)
				setease 1.5,1,ease_cubic_out
				EaseWidth=int(double(350)*geteasef(DecideCount-20,15))
				EaseHeight=int(double(558)*geteasef(DecideCount-20,15))
				EasePosX=BufWidth@/2-EaseWidth/2:EasePosY=BufHeight@/2-EaseHeight/2
				DrawExtendGraph EasePosX,EasePosY,EasePosX+EaseWidth,EasePosY+EaseHeight,hdximg(ibg_nextstage),TRUE

				DrawGraph EasePosX+EaseWidth-96,EasePosY+EaseHeight-46,hdximg(iIcon_normal+lv(ActiveColumnID(ID_SONGS),CurSelLev)),TRUE

				//曲名・アーティスト名
				EasePosX=785
				setease 0,256,ease_cubic_out
				SetDrawBlendMode DX_BLENDMODE_ALPHA,getease(DecideCount-30,15)
				tmpstr=plitem_Title(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))
				if strlen(tmpstr)>25 {
					DrawStringXCenterToHandle EasePosX,624,tmpstr,352,GetColor(0,0,0),hdxfont(fNSCJM20)
				} else {
					DrawStringXCenterToHandle EasePosX,624,tmpstr,350,GetColor(0,0,0),hdxfont(fNSCJM24)
				}
				DrawStringXCenterToHandle EasePosX,674,plitem_Artist(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev)),350,Getcolor(10,10,10),hdxfont(fNSCJM16)

				//難易度表記
				switch lv(ActiveColumnID(ID_SONGS),CurSelLev)
					case 0:tmpstr="NORMAL":tmpint=$28BCEB:swbreak
					case 1:tmpstr="HARD":tmpint=$EB9D28:swbreak
					case 2:tmpstr="CHAOS":tmpint=$EB28C4:swbreak
				swend
				tmpstr+" Lv."+plitem_Level(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))
				DrawStringXCenterToHandle EasePosX,712,tmpstr,350,tmpint,hdxfont(fEOEXB16)

				//画像
				SetDrawBlendMode DX_BLENDMODE_ALPHA,getease(DecideCount-35,15)
				EasePosX=820
				DrawExtendGraph EasePosX,290,EasePosX+280,290+280,plitem_artwork(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev)),TRUE

				//ナビゲーション
				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
				setease -452,48,ease_cubic_out
				DrawGraph getease(DecideCount,30),40,hdximg(inav_nextstage),TRUE

				//暗転
				setease 0,256,ease_linear
				SetDrawBlendMode DX_BLENDMODE_ALPHA,getease(DecideCount-(10+25+60*2+30),30)
				DrawBox 0,0,BufWidth@,BufHeight@,0,TRUE

				setease 0.65,0,ease_linear
				cfunc64v BASS_ChannelSetAttribute,hcommonchannel@,BASS_ATTRIB_VOL,d2f(geteasef(DecideCount-(10+25+60*2+30),20))
			}
		}

		if SkipStartDarkFlag==FALSE {
			setease 256,0,ease_linear
			SetDrawBlendMode DX_BLENDMODE_ALPHA,getease(SceneCount,25)
			DrawBox 0,0,BufWidth@,BufHeight@,GetColor(0,0,0),TRUE
		}

		//オプションウィンドウ
			if OptionWindowFlag!0 {
				SetDrawScreen hdximg(iwindow_option_obj)
				ClearDrawScreen
					if insquare(CursorPosX,CursorPosY,1150,80,1150+770,80+790) {
						WheelVal(ID_OPTION)=RawWheelMove
						RawWheelMove=0
					}
					if WheelVal(ID_OPTION)>0 { //＋
						ScrollEaseA(ID_OPTION)=ScrollEaseB(ID_OPTION)
						ScrollEaseB(ID_OPTION)+80
						OnScrollCount(ID_OPTION)=0
					}
					if WheelVal(ID_OPTION)<0 { //ー
						ScrollEaseA(ID_OPTION)=ScrollEaseB(ID_OPTION)
						ScrollEaseB(ID_OPTION)-80
						OnScrollCount(ID_OPTION)=0
					}
					if ScrollEaseB(ID_OPTION)>0 :ScrollEaseB(ID_OPTION)=0
					if ((64+8)*9+20-790)>0 {
						if ScrollEaseB(ID_OPTION)<-((64+8)*9+20-790) :ScrollEaseB(ID_OPTION)=-((64+8)*9+20-790)
					} else :ScrollEaseB(ID_OPTION)=0
					AddCount OnScrollCount(ID_OPTION)
					//アイテム描画
					repeat 9
						setease ScrollEaseA(ID_OPTION),ScrollEaseB(ID_OPTION),ease_cubic_out
						dim itemposy:itemposy=20+cnt*(64+8)+getease(OnScrollCount(ID_OPTION),10)
						if itemposy<-(64+8) :continue
						if itemposy>790:continue
						SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
						DrawGraph 35,itemposy,hdximg(iobj_bg),TRUE
					loop
					SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
						//流れてくる音符の速さ
						DrawStringToHandle 64,20+0*(64+8)+20,"流れてくる音符の速さ",Getcolor(0,0,0),hdxfont(fNSCJM20)
						//ゲージの難易度
						DrawStringToHandle 64,20+1*(64+8)+20,"ゲージの難易度",Getcolor(0,0,0),hdxfont(fNSCJM20)
						//譜面の配置
						DrawStringToHandle 64,20+2*(64+8)+20,"譜面の配置",Getcolor(0,0,0),hdxfont(fNSCJM20)
						//目標スコア
						DrawStringToHandle 64,20+3*(64+8)+20,"目標スコア",Getcolor(0,0,0),hdxfont(fNSCJM20)
						//判定タイミングの調整
						DrawStringToHandle 64,20+4*(64+8)+20,"判定タイミングの調整",Getcolor(0,0,0),hdxfont(fNSCJM20)
						//描画位置の調整
						DrawStringToHandle 64,20+5*(64+8)+20,"描画位置の調整",Getcolor(0,0,0),hdxfont(fNSCJM20)
						//キーの割り当て
						DrawStringToHandle 64,20+6*(64+8)+20,"キーの割り当て",Getcolor(0,0,0),hdxfont(fNSCJM20)
						//ボーナスの表示
						DrawStringToHandle 64,20+7*(64+8)+20,"ボーナスの表示",Getcolor(0,0,0),hdxfont(fNSCJM20)
						//オートプレイ
						DrawStringToHandle 64,20+8*(64+8)+20,"オートプレイ",Getcolor(0,0,0),hdxfont(fNSCJM20)
					SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
						//流れてくる音符の速さ
						DrawGraph 467,20+0*(64+8)+16,hdximg(iobj_button_left),TRUE:DrawGraph 667,20+0*(64+8)+16,hdximg(iobj_button_right),TRUE
						//ゲージの難易度
						DrawGraph 467,20+1*(64+8)+16,hdximg(iobj_button_left),TRUE:DrawGraph 667,20+1*(64+8)+16,hdximg(iobj_button_right),TRUE
						//譜面の配置
						DrawGraph 467,20+2*(64+8)+16,hdximg(iobj_button_left),TRUE:DrawGraph 667,20+2*(64+8)+16,hdximg(iobj_button_right),TRUE
						//目標スコア
						DrawGraph 467,20+3*(64+8)+16,hdximg(iobj_button_left),TRUE:DrawGraph 667,20+3*(64+8)+16,hdximg(iobj_button_right),TRUE
						//判定タイミングの調整
						DrawGraph 467,20+4*(64+8)+16,hdximg(iobj_button_left),TRUE:DrawGraph 667,20+4*(64+8)+16,hdximg(iobj_button_right),TRUE
						//描画位置の調整
						DrawGraph 467,20+5*(64+8)+16,hdximg(iobj_button_left),TRUE:DrawGraph 667,20+5*(64+8)+16,hdximg(iobj_button_right),TRUE
						//キーの割り当て
						DrawGraph 615,20+6*(64+8)+16,hdximg(iobj_button_change),TRUE
						//ボーナスの表示
						if drawbonusFlag@ {
							DrawGraph 650,20+7*(64+8)+16,hdximg(iobj_switch_on),TRUE
						} else :DrawGraph 650,20+7*(64+8)+16,hdximg(iobj_switch_off),TRUE
						//オートプレイ
						if AutoPlayFlag@ {
							DrawGraph 650,20+8*(64+8)+16,hdximg(iobj_switch_on),TRUE
						} else :DrawGraph 650,20+8*(64+8)+16,hdximg(iobj_switch_off),TRUE
					SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
						//流れてくる音符の速さ
							DrawStringXCenterToHandle 517,40+72*0,strf("x%.2f",AddSpeed@),150,GetColor(0,0,0),hdxfont(fPS20)
						//ゲージの難易度
							sdim tmpstr
							switch GaugeType@
								case GAUGE_ASSIST:tmpstr="ASSIST":swbreak
								case GAUGE_NORMAL:tmpstr="NORMAL":swbreak
								case GAUGE_EXPERT:tmpstr="EXPERT":swbreak
								case GAUGE_MADNESS:tmpstr="MADNESS":swbreak
								default:tmpstr="#undefined."+GaugeType@:swbreak
							swend
							DrawStringXCenterToHandle 517,40+72*1,tmpstr,150,GetColor(0,0,0),hdxfont(fPS20)
						//譜面の配置
							sdim tmpstr
							switch ObjPlacement@
								case OBJP_NORMAL:tmpstr="NORMAL":swbreak
								case OBJP_MIRROR:tmpstr="MIRROR":swbreak
								case OBJP_S_MIRROR:tmpstr="S-MIRROR":swbreak
								case OBJP_N_MIRROR:tmpstr="N-MIRROR":swbreak
								case OBJP_H_MIRROR:tmpstr="H-MIRROR":swbreak
								case OBJP_RANDOM:tmpstr="RANDOM":swbreak
								case OBJP_A_RANDOM:tmpstr="A-RANDOM":swbreak
								case OBJP_S_AUTO:tmpstr="S-AUTO":swbreak
							swend
							DrawStringXCenterToHandle 517,40+72*2,tmpstr,150,GetColor(0,0,0),hdxfont(fPS20)
						//目標スコア
							sdim tmpstr
							switch TargetScoreRank@
								case TARGET_SCORE_MAX:tmpstr="理論値スコア":swbreak
								case TARGET_SCORE_EX:tmpstr="EXランク":swbreak
								case TARGET_SCORE_SSS:tmpstr="SSSランク":swbreak
								case TARGET_SCORE_SS:tmpstr="SSランク":swbreak
								case TARGET_SCORE_S:tmpstr="Sランク":swbreak
								case TARGET_SCORE_AAA:tmpstr="AAAランク":swbreak
								case TARGET_SCORE_AA:tmpstr="AAランク":swbreak
								case TARGET_SCORE_A:tmpstr="Aランク":swbreak
								case TARGET_SCORE_B:tmpstr="Bランク":swbreak
								case TARGET_SCORE_MYBEST:tmpstr="自己ベスト":swbreak
								case TARGET_SCORE_ONLINETOP:tmpstr="歴代ベスト":swbreak
							swend
							DrawStringXCenterToHandle 517,40+72*3,tmpstr,150,GetColor(0,0,0),hdxfont(fNSCJM20)
						//判定タイミングの調整
							DrawStringXCenterToHandle 517,40+72*4,str(JudgeOffset@)+" ms",150,GetColor(0,0,0),hdxfont(fPS20)
						//描画位置の調整
							DrawStringXCenterToHandle 517,40+72*5,str(DispOffset@)+" px",150,GetColor(0,0,0),hdxfont(fPS20)
				SetDrawScreen hdximg@(iScene)
			}
			switch OptionWindowFlag
				case 1
					setease 0,130,ease_cubic_out
					SetDrawBlendMode DX_BLENDMODE_ALPHA,getease(OptionWindowCount,20)
					setease 0,800,ease_cubic_out
					if LowQuaFlag@==FALSE:GraphFilterRectBltS hdximg@(iScene),hdximg@(iScene),0,0,BufWidth@,BufHeight@,0,0,DX_GRAPH_FILTER_GAUSS,64,getease(OptionWindowCount,20)
					DrawBox 0,0,BufWidth@,BufHeight@,GetColor(0,0,0),TRUE
					setease 200,256,ease_cubic_out
					SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,getease(OptionWindowCount,20)
					setease 1150+500,1150,ease_cubic_out
					DrawGraph getease(OptionWindowCount,20),0,hdximg(ibg_option),TRUE
					DrawGraph getease(OptionWindowCount,20),80,hdximg(iwindow_option_obj),TRUE
					//説明文
						SetDrawBlendMode DX_BLENDMODE_ALPHA,256
						sdim tmpstr,64,9
						tmpstr(0)="流れてくる音符の速さを設定します。\n※音符の速さは楽曲のBPMに比例します。\n左のプレビューを参考にして、値を設定してください。"
						tmpstr(1)="ゲージの難易度を設定します。\nASSISTとNORMALは70%以上でクリア、\nEXPERTとMADNESSは0%になると終了します。\nASSISTが最も減少しにくく、MADNESSが最も減少しやすいです。"
						tmpstr(2)="NORMAL:通常の配置　MIRROR:左右反転　S-MIRROR:サイドレーンのみ反転\nN-MIRROR:通常レーンのみ反転\nH-MIRROR:通常レーンの中央を境にそれぞれ左右反転\nRANDOM:通常レーンをランダムに入れ替え　\nA-RANDOM:全てのレーンをランダムに入れ替え\nS-AUTO:サイドレーンを自動化"
						tmpstr(3)="目標スコアのランクを設定します。\n自己ベストを設定した場合、一定のペースで増加します。"
						tmpstr(4)="判定タイミングをミリ秒(ms)単位で調整します。\nEARLYが多い場合は+方向に、LATEが多い場合は-方向に調整します。"
						tmpstr(5)="描画位置をピクセル(px)単位で調整します。"
						tmpstr(6)="キーの割り当てを変更します。"
						tmpstr(7)="ボーナスを表示するか設定します。\n非表示にした場合でも能力値は加算されます。"
						tmpstr(8)="全ての音符が自動で判定されます。\n有効にすると、スコアは保存されません。"
						repeat 9
							if insquare(CursorPosX,CursorPosY,1185,104+72*cnt,1185+700,104+72*cnt+64) {
								DrawStringToHandle 1190,895,tmpstr(cnt),Getcolor(0,0,0),hdxfont(fNSCJM20)
							}
						loop

					//レーンプレビュー
					setease 0,256,ease_cubic_out
					SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,getease(OptionWindowCount,20)
					DrawGraph 0,0,hdximg(ibg_lanepreview),TRUE
					PreviewBPM=plitem_defbpm(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))
					if OptionWindowCount==0 :PreviewPosY=0
					PreviewPosY+1000.0/FPSvalue@*PreviewBPM/400.0*AddSpeed@
					if PreviewPosY>864+(60000.0/PreviewBPM)*4*(PreviewBPM/400.0)*AddSpeed@ :PreviewPosY=0
					repeat 4
						DrawPosY=int(PreviewPosY-(60000.0/PreviewBPM)*double(cnt)*(PreviewBPM/400.0)*AddSpeed@)
						if DrawPosY>864-32 :continue
						DrawGraph 418+90*cnt,DrawPosY,hdximg(inote_preview),TRUE
					loop
					DrawGraph 300,0,hdximg(ilanehide),TRUE

					//BPM表記
					setease 0,256,ease_cubic_out
					SetDrawBlendMode DX_BLENDMODE_ALPHA,getease(OptionWindowCount,20)
					setease -64,0,ease_cubic_out
					DrawStringXCenterToHandle 300+getease(OptionWindowCount,20),970,"BPM "+strf("%.2f",PreviewBPM)+" x "+strf("%.2f",AddSpeed@)+" = "+strf("%.2f",(PreviewBPM*AddSpeed@)),596,Getcolor(255,255,255),hdxfont(fPS24)

				swbreak
				case 2
					setease 130,0,ease_cubic_out
					SetDrawBlendMode DX_BLENDMODE_ALPHA,getease(OptionWindowCount,20)
					setease 800,0,ease_cubic_out
					if LowQuaFlag@==FALSE:GraphFilterRectBltS hdximg@(iScene),hdximg@(iScene),0,0,BufWidth@,BufHeight@,0,0,DX_GRAPH_FILTER_GAUSS,64,getease(OptionWindowCount,20)
					DrawBox 0,0,BufWidth@,BufHeight@,GetColor(0,0,0),TRUE
					setease 256,0,ease_cubic_out
					SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,getease(OptionWindowCount,20)
					setease 1150,BufWidth@,ease_cubic_out
					DrawGraph getease(OptionWindowCount,20),0,hdximg(ibg_option),TRUE
					DrawGraph getease(OptionWindowCount,20),80,hdximg(iwindow_option_obj),TRUE
					if OptionWindowCount>20 :OptionWindowFlag=0
				swbreak
			swend
			AddCount OptionWindowCount

		//チュートリアル
		if TutorialWindowID!-1 {
			if TutorialWindowID==0 {
				setease 0,800,ease_linear
				GraphFilterRectBltS hdximg@(iScene),hdximg@(iScene),0,0,BufWidth@,165,0,0,DX_GRAPH_FILTER_GAUSS,64,getease(TutorialWindowCount,20)
				GraphFilterRectBltS hdximg@(iScene),hdximg@(iScene),1150,165,1150+770,165+916,1150,165,DX_GRAPH_FILTER_GAUSS,64,getease(TutorialWindowCount,20)
				setease 0,256,ease_linear
				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,getease(TutorialWindowCount,20)
				DrawGraph 0,0,hdximg(itutorial_window_0),TRUE
				if insquare(CursorPosX,CursorPosY,1620,951,1620+200,951+80)&TutorialWindowCount>20 {
					SetDrawBlendMode DX_BLENDMODE_ALPHA,25
					DrawBox 1620,951,1620+200,951+80,$FFFFFF,TRUE
				}
			}
			if TutorialWindowID==1 {
				setease 800,0,ease_linear
				GraphFilterRectBltS hdximg@(iScene),hdximg@(iScene),0,0,BufWidth@,165,0,0,DX_GRAPH_FILTER_GAUSS,64,getease(TutorialWindowCount,20)
				GraphFilterRectBltS hdximg@(iScene),hdximg@(iScene),1150,165,1150+770,165+916,1150,165,DX_GRAPH_FILTER_GAUSS,64,getease(TutorialWindowCount,20)
				setease 0,800,ease_linear
				GraphFilterRectBltS hdximg@(iScene),hdximg@(iScene),0,0,1150,BufHeight@,0,0,DX_GRAPH_FILTER_GAUSS,64,getease(TutorialWindowCount,20)
				setease 256,0,ease_linear
				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,getease(TutorialWindowCount,20)
				DrawGraph 0,0,hdximg(itutorial_window_0),TRUE
				setease 0,256,ease_linear
				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,getease(TutorialWindowCount-20,20)
				DrawGraph 0,0,hdximg(itutorial_window_1),TRUE
				if insquare(CursorPosX,CursorPosY,150,914,150+200,914+80)&TutorialWindowCount>40 {
					SetDrawBlendMode DX_BLENDMODE_ALPHA,25
					DrawBox 150,914,150+200,914+80,$FFFFFF,TRUE
				}
			}
			if TutorialWindowID==2 {
				setease 256,0,ease_linear
				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,getease(TutorialWindowCount,20)
				DrawGraph 0,0,hdximg(itutorial_window_1),TRUE
				if TutorialWindowCount>25 :WatchTutorial_MusicSelect_0@=TRUE:WatchTutorial_MusicSelect_1@=TRUE:TutorialWindowID=-1
			}
			if TutorialWindowID==3 {
				setease 0,800,ease_linear
				GraphFilterRectBltS hdximg@(iScene),hdximg@(iScene),0,0,1150,BufHeight@,0,0,DX_GRAPH_FILTER_GAUSS,64,getease(TutorialWindowCount,20)
				setease 0,256,ease_linear
				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,getease(TutorialWindowCount,20)
				DrawGraph 0,0,hdximg(itutorial_option),TRUE
				if insquare(CursorPosX,CursorPosY,120,899,120+200,899+80)&TutorialWindowCount>40 {
					SetDrawBlendMode DX_BLENDMODE_ALPHA,25
					DrawBox 120,899,120+200,899+80,$FFFFFF,TRUE
				}
			}
			if TutorialWindowID==4 {
				setease 800,0,ease_linear
				GraphFilterRectBltS hdximg@(iScene),hdximg@(iScene),0,0,1150,BufHeight@,0,0,DX_GRAPH_FILTER_GAUSS,64,getease(TutorialWindowCount,20)
				setease 256,0,ease_linear
				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,getease(TutorialWindowCount,20)
				DrawGraph 0,0,hdximg(itutorial_option),TRUE
				if TutorialWindowCount>25 :WatchTutorial_Option@=TRUE:TutorialWindowID=-1
			}
			AddCount TutorialWindowCount
		}

		//他シーンへジャンプ
		if JumpSceneFlag {
			setease 0,256,ease_linear
			SetDrawBlendMode DX_BLENDMODE_ALPHA,getease(JumpSceneCount,20)
			DrawBox 0,0,BufWidth@,BufHeight@,Getcolor(0,0,0),TRUE
			if JumpSceneCount>20 {
				curSceneID@=JumpSceneID
				switch JumpSceneID
					case ID_KEYCONFIG
						LoadKeyConfigFonts
						StartKeyConfig
					swbreak
				swend
			}
			AddCount JumpSceneCount
		}

		//プレビュー再生
		if SongChangeCount==0|DecideCount==1 {
			repeat numitem
				plitemid=cnt
				repeat 3
					pllevid=cnt
					cfunc64v BASS_ChannelPause,plitem_hchpreview(plitemid,pllevid)
				loop
			loop
		}
		if SongChangeCount==0 {
			cfunc64v BASS_ChannelSetPosition,plitem_hchpreview(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev)),0,0,0
			cfunc64v BASS_ChannelPlay,plitem_hchpreview(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))
			cfunc64v BASS_ChannelSetAttribute,hcommonchannel@,BASS_ATTRIB_VOL,0;d2f(0.65)
			cfunc64v BASS_ChannelSetAttribute,plitem_hchpreview(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev)),BASS_ATTRIB_VOL,d2f(0.65)
		}
		if SongChangeCount<FPSvalue@/2 {
			setease 0,0.65,ease_linear
			cfunc64v BASS_ChannelSetAttribute,plitem_hchpreview(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev)),BASS_ATTRIB_VOL,d2f(geteasef(SongChangeCount,FPSvalue@/2))
		}
		if SongChangeCount==FPSvalue@*10 {
			cfunc64v BASS_ChannelPause,plitem_hchpreview(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))
		}
		if SongChangeCount>FPSvalue@*8+FPSvalue@/2 {
			setease 0,0.65,ease_linear
			cfunc64v BASS_ChannelSetAttribute,hcommonchannel@,BASS_ATTRIB_VOL,d2f(geteasef(SongChangeCount-FPSvalue@*8-FPSvalue@/2,FPSvalue@))
		}

		//決定
		if DecideCount==1 {		//リソース解放
			DeleteGraph hdximg(inote_preview)
			cfunc64v BASS_ChannelSetAttribute,hcommonchannel@,BASS_ATTRIB_VOL,d2f(0.65)
		}
		if DecideCount>10+25+60*3&SceneTransID==ID_TRANS_PLAY {
			//カウンタ
			librec_PlayCount@++

			PauseMovieToGraph hdximg(ibg_Load)
			PauseMovieToGraph hdximg(ibg)
			ExtraPlayInfo@="FREEPLAY,*"
			InitScene ID_PLAY
			InitGamePlayFonts
			OpenChartFile"Data/map-"+plitem_UUID(c(ActiveColumnID(ID_SONGS),CurSelLev),lv(ActiveColumnID(ID_SONGS),CurSelLev))+".bin",ActiveColumnID(ID_SONGS),CurSelLev
			SetDrawScreen hdximg@(iScene)
			ClearDrawScreen
			cfunc64v BASS_ChannelPause,hbasschannel(bgmMain)
			StartGameplay
		}
		if DecideCount>20&SceneTransID==ID_TRANS_PARTNERSELECT {
			//パートナー選択
			;PauseMovieToGraph hdximg(ibg)
			InitScene ID_PARTNERSELECT
			LoadPartnerSelectFonts
			StartPartnerSelect
			SceneTransID=FALSE
		}
		if DecideCount>25&SceneTransID==ID_TRANS_BACKSCENE {
			//戻る
			;PauseMovieToGraph hdximg(ibg)
			InitScene ID_LOBBY
			InitLobbyFonts
			StartLobby
			SceneTransID=FALSE
		}

		//各種カウンタ
		AddCount SceneCount
		AddCount SongChangeCount
		AddCount CatChangeCount
		bfMouseInput=MouseInput
		if DecideCount!-1 :AddCount DecideCount
		if MouseInput&MOUSE_INPUT_LEFT :AddCount LClickKeepCount:else:LClickKeepCount=0

	return

	#deffunc DeleteMusicSelectResource
		repeat numitem
			plitemid=cnt
			repeat 3
				pllevid=cnt
				DeleteGraph plitem_artwork(plitemid,pllevid)
				cfunc64v BASS_ChannelFree,plitem_hchpreview(plitemid,pllevid)
				cfunc64v BASS_SampleFree,plitem_hsmppreview(plitemid,pllevid)
			loop
		loop
		return
#global